{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/dosis_b30f27c9.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"dosis_b30f27c9-module__not4fa__className\",\n  \"variable\": \"dosis_b30f27c9-module__not4fa__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/dosis_b30f27c9.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Dosis%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22weight%22:[%22300%22,%22400%22,%22500%22,%22600%22,%22700%22,%22800%22],%22variable%22:%22--font-dosis%22}],%22variableName%22:%22dosis%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Dosis', 'Dosis Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///F:/studio.ankun/components/root-layout-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const RootLayoutClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call RootLayoutClient() from the server but RootLayoutClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/root-layout-client.tsx <module evaluation>\",\n    \"RootLayoutClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,mEACA","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///F:/studio.ankun/components/root-layout-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const RootLayoutClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call RootLayoutClient() from the server but RootLayoutClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/root-layout-client.tsx\",\n    \"RootLayoutClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,+CACA","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///F:/studio.ankun/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\"\nimport { Dosis } from \"next/font/google\"\nimport { RootLayoutClient } from \"@/components/root-layout-client\"\nimport \"./globals.css\"\nimport \"./additional-styles.css\"\n\nconst dosis = Dosis({ \n  subsets: [\"latin\"],\n  weight: [\"300\", \"400\", \"500\", \"600\", \"700\", \"800\"],\n  variable: \"--font-dosis\",\n})\n\nexport const metadata: Metadata = {\n  title: process.env.COMPANY_NAME,\n  description: process.env.COMPANY_DESCRIPTION,\n}\n\nexport default function RootLayout({\n  children,\n}: {\n  readonly children: React.ReactNode\n}) {\n  return (\n    <html lang=\"vi\" suppressHydrationWarning>\n      <head>\n        <link rel=\"icon\" href={process.env.COMPANY_LOGOICO} />\n      </head>\n      <RootLayoutClient className={dosis.className}>\n        {children}\n      </RootLayoutClient>\n    </html>\n  )\n}"],"names":[],"mappings":";;;;;;AAEA;;;;;;AAUO,MAAM,WAAqB;IAChC,OAAO,QAAQ,GAAG,CAAC,YAAY;IAC/B,aAAa,QAAQ,GAAG,CAAC,mBAAmB;AAC9C;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAK,MAAK;QAAK,wBAAwB;;0BACtC,8OAAC;0BACC,cAAA,8OAAC;oBAAK,KAAI;oBAAO,MAAM,QAAQ,GAAG,CAAC,eAAe;;;;;;;;;;;0BAEpD,8OAAC,uIAAA,CAAA,mBAAgB;gBAAC,WAAW,yIAAA,CAAA,UAAK,CAAC,SAAS;0BACzC;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///F:/studio.ankun/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}}]
}