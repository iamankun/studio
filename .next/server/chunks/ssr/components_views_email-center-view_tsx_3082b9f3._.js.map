{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///F:/studio.ankun/components/views/email-center-view.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Mail, Send, Inbox, CheckCircle, RotateCw, FileText, Plus, Edit, Trash2, Copy, TestTube, Settings, Download } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"@/components/ui/tabs\";\nimport { Label } from \"@/components/ui/label\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from \"@/components/ui/select\";\nimport { RichTextEditor } from \"@/components/rich-text-editor\";\n\n// Define types if not imported from elsewhere\ntype EmailTemplate = {\n  id: string;\n  name: string;\n  subject: string;\n  content: string;\n  htmlContent: string;\n  type: \"html\" | \"text\";\n  variables: string[];\n};\n\ntype EmailMessage = {\n  id: string;\n  from: string;\n  to: string;\n  subject: string;\n  content: string;\n  date: string;\n  read: boolean;\n  type: \"sent\" | \"received\";\n};\n\ntype EmailDetails = {\n  from: string;\n  to: string;\n  cc?: string;\n  bcc?: string;\n  subject: string;\n  textBody: string;\n  htmlBody?: string;\n};\n\ntype SmtpSettings = {\n  smtpServer: string;\n  smtpPort: string;\n  smtpUsername: string;\n  smtpPassword?: string;\n  connected: boolean;\n};\n\n// Dummy sendEmail function for demonstration; replace with actual implementation\nasync function sendEmail(_details: EmailDetails): Promise<{ success: boolean; message: string }> {\n  // Simulate sending email\n  return new Promise((resolve) => setTimeout(() => resolve({ success: true, message: \"Email sent successfully.\" }), 1000));\n}\n\ninterface EmailCenterViewProps {\n  showModal: (title: string, messages: string[], type?: \"error\" | \"success\") => void;\n}\n\nexport function EmailCenterView({ showModal }: EmailCenterViewProps) {\n  const [templates, setTemplates] = useState<EmailTemplate[]>([])\n  const [selectedTemplate, setSelectedTemplate] = useState<EmailTemplate | null>(null)\n  const [isEditing, setIsEditing] = useState(false)\n  const [emailMessages, setEmailMessages] = useState<EmailMessage[]>([])\n  const [syncStatus, setSyncStatus] = useState(\"Connected\")\n  const [lastSync, setLastSync] = useState(new Date().toLocaleString(\"vi-VN\"))\n  const [emailForm, setEmailForm] = useState({\n    from: \"\",\n    to: \"\",\n    cc: \"\",\n    bcc: \"\",\n    subject: \"\",\n    content: \"\",\n    htmlContent: \"\",\n    type: \"text\" as \"html\" | \"text\",\n  })\n\n  // Key for SMTP settings in localStorage, consistent with lib/email.ts and SettingsView.tsx\n  const SMTP_LOCALSTORAGE_KEY = \"emailSettings_v2\";\n\n  const [smtpSettings, setSmtpSettings] = useState<SmtpSettings>({\n    smtpServer: \"\", // Initialize with empty or default values\n    smtpPort: \"587\",\n    smtpUsername: \"\",\n    smtpPassword: \"\", // Password should ideally not be stored directly or be optional in display\n    connected: false, // Assume not connected until verified or loaded from storage\n  });\n\n  useEffect(() => {\n    loadTemplates()\n    loadEmailMessages()\n\n    // Load SMTP settings from localStorage\n    const savedSmtpSettings = localStorage.getItem(SMTP_LOCALSTORAGE_KEY);\n    if (savedSmtpSettings) {\n      try {\n        setSmtpSettings(JSON.parse(savedSmtpSettings) as SmtpSettings);\n      } catch (error) {\n        console.error(\"EmailCenterView: Failed to parse SMTP settings from localStorage\", error);\n      }\n    }\n\n    // Auto-sync emails every 30 seconds\n    const interval = setInterval(syncEmails, 30000)\n    return () => clearInterval(interval)\n  }, [])\n\n  const loadTemplates = () => {\n    const saved = localStorage.getItem(\"emailTemplates_v2\")\n    if (saved) {\n      setTemplates(JSON.parse(saved))\n    } else {\n      // Default templates\n      const defaultTemplates: EmailTemplate[] = [\n        {\n          id: \"status_update\",\n          name: \"Cập nhật trạng thái\",\n          subject: \"Cập nhật trạng thái bài hát [tenbaihat]\",\n          content: `Chào [tennghesi],\n\nBài hát \"[tenbaihat]\" (ID: [id]) của bạn đã được cập nhật.\nTrạng thái hiện tại: [trangthai]\n\nNgày gửi: [ngaygui]\nNgày phát hành dự kiến: [ngayphathanh]\n\nChúng tôi sẽ thông báo khi có cập nhật mới.\n\nTrân trọng,\n[tenmanager]\n[email]`,\n          htmlContent: \"\",\n          type: \"text\",\n          variables: [\"tennghesi\", \"tenbaihat\", \"id\", \"trangthai\", \"ngaygui\", \"ngayphathanh\", \"tenmanager\", \"email\"],\n        },\n        {\n          id: \"welcome\",\n          name: \"Chào mừng nghệ sĩ mới\",\n          subject: \"Chào mừng [tennghesi] đến với [tenlabel]!\",\n          content: `<h2>Chào mừng [tennghesi]!</h2>\n<p>Cảm ơn bạn đã tham gia cộng đồng <strong>[tenlabel]</strong>.</p>\n<p>Tài khoản của bạn đã được kích hoạt thành công:</p>\n<ul>\n<li>Username: [username]</li>\n<li>Email: [email]</li>\n<li>Vai trò: [vaitro]</li>\n</ul>\n<p>Bạn có thể bắt đầu tải nhạc lên ngay bây giờ!</p>\n<br>\n<p>Trân trọng,<br>[tenmanager]</p>`,\n          htmlContent: \"\",\n          type: \"html\",\n          variables: [\"tennghesi\", \"tenlabel\", \"username\", \"email\", \"vaitro\", \"tenmanager\"],\n        },\n      ]\n      setTemplates(defaultTemplates)\n      saveTemplates(defaultTemplates)\n    }\n  }\n\n  const loadEmailMessages = () => {\n    const saved = localStorage.getItem(\"emailMessages_v2\")\n    if (saved) {\n      setEmailMessages(JSON.parse(saved))\n    } else {\n      // Start with empty messages - no sample data\n      setEmailMessages([])\n      localStorage.setItem(\"emailMessages_v2\", JSON.stringify([]))\n    }\n  }\n\n  const saveTemplates = (templatesData: EmailTemplate[]) => {\n    localStorage.setItem(\"emailTemplates_v2\", JSON.stringify(templatesData))\n  }\n\n  const syncEmails = () => {\n    setSyncStatus(\"Syncing...\")\n\n    // Simulate email sync\n    setTimeout(() => {\n      setSyncStatus(\"Connected\")\n      setLastSync(new Date().toLocaleString(\"vi-VN\"))\n\n      // Note: Remove fake email generation for production use\n      // Email sync will be handled by real SMTP service\n    }, 2000)\n  }\n\n  const handleCreateTemplate = () => {\n    const newTemplate: EmailTemplate = {\n      id: `template_${Date.now()}`,\n      name: \"Mẫu email mới\",\n      subject: \"\",\n      content: \"\",\n      htmlContent: \"\",\n      type: \"text\",\n      variables: [],\n    }\n    setSelectedTemplate(newTemplate)\n    setIsEditing(true)\n  }\n\n  const handleSaveTemplate = () => {\n    if (!selectedTemplate) return\n\n    const updatedTemplates = templates.filter((t) => t.id !== selectedTemplate.id)\n    updatedTemplates.push(selectedTemplate)\n    setTemplates(updatedTemplates)\n    saveTemplates(updatedTemplates)\n    setIsEditing(false)\n    showModal(\"Lưu thành công\", [`Đã lưu mẫu email \"${selectedTemplate.name}\"`], \"success\")\n  }\n\n  const handleDeleteTemplate = (templateId: string) => {\n    if (confirm(\"Bạn có chắc muốn xóa mẫu email này?\")) {\n      const updatedTemplates = templates.filter((t) => t.id !== templateId)\n      setTemplates(updatedTemplates)\n      saveTemplates(updatedTemplates)\n      if (selectedTemplate?.id === templateId) {\n        setSelectedTemplate(null)\n      }\n      showModal(\"Xóa thành công\", [\"Đã xóa mẫu email\"], \"success\")\n    }\n  }\n\n  const handleTestEmail = () => {\n    if (!selectedTemplate) return\n\n    const testData = {\n      tennghesi: \"Nguyễn Văn A\",\n      tenbaihat: \"Bài hát test\",\n      id: \"MH123456\",\n      trangthai: \"Đã duyệt, đang chờ phát hành!\",\n      ngaygui: new Date().toLocaleDateString(\"vi-VN\"),\n      ngayphathanh: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toLocaleDateString(\"vi-VN\"),\n      tenmanager: \"An Kun Studio\",\n      email: \"manager@yourdomain.com\",\n      tenlabel: \"An Kun Studio\",\n      username: \"test_user\",\n      vaitro: \"Nghệ sĩ\",\n    }\n\n    let testContent = selectedTemplate.content\n    Object.entries(testData).forEach(([key, value]) => {\n      testContent = testContent.replace(new RegExp(`\\\\[${key}\\\\]`, \"g\"), value)\n    })\n\n    showModal(\"Test email\", [testContent], \"success\")\n  }\n\n  const handleSendEmail = async () => {\n    if (!emailForm.to || !emailForm.subject || !emailForm.content) {\n      showModal(\"Lỗi gửi email\", [\"Vui lòng điền đầy đủ thông tin\"], \"error\")\n      return\n    }\n\n    const emailDetails: EmailDetails = {\n      from: emailForm.from,\n      to: emailForm.to,\n      cc: emailForm.cc,\n      bcc: emailForm.bcc,\n      subject: emailForm.subject,\n      textBody: emailForm.type === \"text\" ? emailForm.content : \"Vui lòng xem nội dung HTML.\", // Cần cơ chế convert HTML to text\n      htmlBody: emailForm.type === \"html\" ? emailForm.htmlContent : undefined,\n    }\n\n    const result = await sendEmail(emailDetails)\n\n    if (result.success) {\n      const newMessage: EmailMessage = {\n        id: `msg_${Date.now()}`,\n        ...emailDetails,\n        content: emailForm.content, // Lưu nội dung gốc để hiển thị\n        date: new Date().toLocaleString(\"vi-VN\"),\n        read: true,\n        type: \"sent\",\n      }\n      const updatedMessages = [newMessage, ...emailMessages]\n      setEmailMessages(updatedMessages)\n      localStorage.setItem(\"emailMessages_v2\", JSON.stringify(updatedMessages))\n      showModal(\"Gửi email thành công\", [result.message], \"success\")\n      setEmailForm({ from: \"\", to: \"\", cc: \"\", bcc: \"\", subject: \"\", content: \"\", htmlContent: \"\", type: \"text\" })\n    } else {\n      showModal(\"Lỗi gửi email\", [result.message], \"error\")\n    }\n  }\n\n  const copyTemplateVariables = (template: EmailTemplate) => {\n    const variables = template.variables.map((v) => `[${v}]`).join(\", \")\n    navigator.clipboard.writeText(variables)\n    showModal(\"Copy thành công\", [`Đã copy các biến: ${variables}`], \"success\")\n  }\n\n  const markAsRead = (messageId: string) => {\n    const updatedMessages = emailMessages.map((msg) => (msg.id === messageId ? { ...msg, read: true } : msg))\n    setEmailMessages(updatedMessages)\n    localStorage.setItem(\"emailMessages_v2\", JSON.stringify(updatedMessages))\n  }\n\n  const unreadCount = emailMessages.filter((msg) => !msg.read && msg.type === \"received\").length\n\n  return (\n    <div className=\"p-6 font-sans\">\n      <h2 className=\"text-3xl font-bold text-white mb-6 flex items-center\">\n        <Mail className=\"mr-3 text-purple-400\" />\n        Trung tâm email\n        {syncStatus === \"Connected\" && <CheckCircle className=\"ml-2 h-5 w-5 text-green-400\" />}\n      </h2>\n\n      <Tabs defaultValue=\"inbox\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-5 font-medium\">\n          <TabsTrigger value=\"inbox\" className=\"relative\">\n            Hộp thư\n            {unreadCount > 0 && (\n              <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                {unreadCount}\n              </span>\n            )}\n          </TabsTrigger>\n          <TabsTrigger value=\"compose\">\n            Soạn email\n          </TabsTrigger>\n          <TabsTrigger value=\"templates\">\n            Mẫu email\n          </TabsTrigger>\n          <TabsTrigger value=\"settings\">\n            Cài đặt SMTP\n          </TabsTrigger>\n          <TabsTrigger value=\"sync\">\n            Đồng bộ\n          </TabsTrigger>\n        </TabsList>\n\n        {/* Inbox */}\n        <TabsContent value=\"inbox\" className=\"space-y-6\">\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center justify-between font-semibold\">\n                <span className=\"flex items-center\">\n                  <Inbox className=\"mr-2\" />\n                  Hộp thư đến ({emailMessages.length})\n                </span>\n                <Button\n                  onClick={syncEmails}\n                  variant=\"outline\"\n                  disabled={syncStatus === \"Syncing...\"}\n                  className=\"font-medium\"\n                >\n                  <RotateCw className=\"mr-2 h-4 w-4\" />\n                  {syncStatus === \"Syncing...\" ? \"Đang đồng bộ...\" : \"Đồng bộ\"}\n                </Button>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                {emailMessages.map((message) => (\n                  <Card\n                    key={message.id}\n                    className={`cursor-pointer transition-colors ${message.read ? \"bg-gray-700\" : \"bg-blue-900/30\"\n                      } border-gray-600 hover:bg-gray-600`}\n                    onClick={() => markAsRead(message.id)}\n                  >\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2 mb-1\">\n                            <span\n                              className={`px-2 py-1 rounded text-xs font-dosis-medium ${message.type === \"sent\" ? \"bg-green-600\" : \"bg-blue-600\"\n                                }`} // Changed font-dosis-medium to font-medium\n                            >\n                              {message.type === \"sent\" ? \"Đã gửi\" : \"Nhận\"}\n                            </span>\n                            {!message.read && message.type === \"received\" && (\n                              <span className=\"w-2 h-2 bg-red-500 rounded-full\"></span>\n                            )}\n                          </div>\n                          <h4 className=\"font-semibold text-white\">{message.subject}</h4>\n                          <p className=\"text-gray-400 text-sm font-sans\">\n                            {message.type === \"sent\" ? `Đến: ${message.to}` : `Từ: ${message.from}`}\n                          </p>\n                          <p className=\"text-gray-500 text-sm mt-1 line-clamp-2 font-sans\">{message.content}</p>\n                        </div>\n                        <div className=\"text-right\">\n                          <p className=\"text-xs text-gray-500 font-sans\">{message.date}</p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n\n              <div className=\"mt-4 text-center text-gray-500 text-sm font-sans\">Lần đồng bộ cuối: {lastSync}</div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Compose Email */}\n        <TabsContent value=\"compose\" className=\"space-y-6\">\n          <Card className=\"bg-gray-800 border-gray-700 font-sans\">\n            <CardHeader> {/* Removed font-dosis-semibold */}\n              <CardTitle className=\"flex items-center font-semibold\">\n                <Send className=\"mr-2\" />\n                Soạn email mới\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <Label className=\"font-medium\">Từ (From)</Label>\n                  <Input\n                    value={emailForm.from}\n                    onChange={(e) => setEmailForm({ ...emailForm, from: e.target.value })}\n                    placeholder=\"your-email@example.com\"\n                    className=\"font-sans\"\n                  />\n                </div>\n                <div>\n                  <Label className=\"font-medium\">Đến (To) *</Label>\n                  <Input\n                    value={emailForm.to}\n                    onChange={(e) => setEmailForm({ ...emailForm, to: e.target.value })}\n                    placeholder=\"recipient@example.com\"\n                    className=\"font-sans\"\n                  />\n                </div>\n                <div>\n                  <Label className=\"font-medium\">CC</Label>\n                  <Input\n                    value={emailForm.cc}\n                    onChange={(e) => setEmailForm({ ...emailForm, cc: e.target.value })}\n                    placeholder=\"cc@domain.com\"\n                    className=\"font-sans\"\n                  />\n                </div>\n                <div>\n                  <Label className=\"font-medium\">BCC</Label>\n                  <Input\n                    value={emailForm.bcc}\n                    onChange={(e) => setEmailForm({ ...emailForm, bcc: e.target.value })}\n                    placeholder=\"bcc@domain.com\"\n                    className=\"font-sans\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label className=\"font-medium\">Chủ đề (Subject) *</Label>\n                <Input\n                  value={emailForm.subject}\n                  onChange={(e) => setEmailForm({ ...emailForm, subject: e.target.value })}\n                  placeholder=\"Chủ đề email...\"\n                  className=\"font-sans\"\n                />\n              </div>\n\n              <div>\n                <Label className=\"font-medium\">Phân loại nội dung</Label>\n                <Select\n                  value={emailForm.type}\n                  onValueChange={(value) => setEmailForm({ ...emailForm, type: value as \"html\" | \"text\" })}\n                >\n                  <SelectTrigger className=\"w-48 font-sans\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"text\" className=\"font-sans\">\n                      Văn bản thuần\n                    </SelectItem>\n                    <SelectItem value=\"html\" className=\"font-sans\">\n                      HTML\n                    </SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div>\n                <Label className=\"font-medium\">Nội dung email *</Label>\n                <RichTextEditor\n                  value={emailForm.content}\n                  onChange={(content, html) =>\n                    setEmailForm({\n                      ...emailForm,\n                      content,\n                      htmlContent: html,\n                    })\n                  }\n                  mode={emailForm.type}\n                  placeholder=\"Nội dung email...\"\n                />\n              </div>\n\n              <div className=\"flex space-x-2\">\n                <Button onClick={handleSendEmail} className=\"bg-blue-600 hover:bg-blue-700 font-medium\">\n                  <Send className=\"mr-2 h-4 w-4\" />\n                  Gửi\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  onClick={() =>\n                    setEmailForm({\n                      from: \"\",\n                      to: \"\",\n                      cc: \"\",\n                      bcc: \"\",\n                      subject: \"\",\n                      content: \"\",\n                      htmlContent: \"\",\n                      type: \"text\",\n                    })\n                  }\n                  className=\"font-medium\"\n                >\n                  Xóa form\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Email Templates */}\n        <TabsContent value=\"templates\" className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Templates List */}\n            <Card className=\"bg-gray-800 border-gray-700 font-sans\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between font-semibold\">\n                  <span className=\"flex items-center\">\n                    <FileText className=\"mr-2\" />\n                    Mẫu email ({templates.length})\n                  </span>\n                  <Button\n                    onClick={handleCreateTemplate}\n                    size=\"sm\"\n                    className=\"bg-green-600 hover:bg-green-700 font-medium\"\n                  >\n                    <Plus className=\"h-4 w-4\" />\n                  </Button>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                {templates.map((template) => (\n                  <div\n                    key={template.id}\n                    role=\"button\"\n                    tabIndex={0}\n                    aria-pressed={selectedTemplate?.id === template.id}\n                    className={`p-3 rounded-lg cursor-pointer transition-colors email-template-card text-left w-full ${selectedTemplate?.id === template.id ? \"bg-purple-600\" : \"bg-gray-700 hover:bg-gray-600\"\n                      }`}\n                    onClick={() => setSelectedTemplate(template)}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault()\n                        setSelectedTemplate(template)\n                      }\n                    }}\n                  >\n                    <div className=\"flex items-center justify-between font-sans\">\n                      <div>\n                        <h4 className=\"font-semibold text-white\">{template.name}</h4>\n                        <p className=\"text-xs text-gray-400\">{template.type.toUpperCase()}</p>\n                      </div>\n                      <div className=\"flex space-x-1\">\n                        <div\n                          role=\"button\"\n                          tabIndex={0}\n                          aria-label=\"Edit template\"\n                          className=\"h-8 w-8 p-0 font-sans inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground cursor-pointer\"\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            setSelectedTemplate(template)\n                            setIsEditing(true)\n                          }}\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter' || e.key === ' ') {\n                              e.preventDefault()\n                              e.stopPropagation()\n                              setSelectedTemplate(template)\n                              setIsEditing(true)\n                            }\n                          }}\n                        >\n                          <Edit className=\"h-4 w-4\" />\n                        </div>\n                        <div\n                          role=\"button\"\n                          tabIndex={0}\n                          aria-label=\"Delete template\"\n                          className=\"h-8 w-8 p-0 text-red-400 hover:text-red-300 font-sans inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground cursor-pointer\"\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            handleDeleteTemplate(template.id)\n                          }}\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter' || e.key === ' ') {\n                              e.preventDefault()\n                              e.stopPropagation()\n                              handleDeleteTemplate(template.id)\n                            }\n                          }}\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </CardContent>\n            </Card>\n\n            {/* Template Editor */}\n            <div className=\"lg:col-span-2\">\n              {selectedTemplate ? (\n                <Card className=\"bg-gray-800 border-gray-700 font-sans\"> {/* Removed font-dosis-semibold */}\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between font-semibold\">\n                      <span>{isEditing ? \"Chỉnh sửa\" : \"Xem\"} mẫu email</span>\n                      <div className=\"flex space-x-2\">\n                        <Button\n                          onClick={() => copyTemplateVariables(selectedTemplate)}\n                          variant=\"outline\" // Removed font-dosis-medium\n                          size=\"sm\"\n                          className=\"font-medium\"\n                        >\n                          <Copy className=\"mr-2 h-4 w-4\" />\n                          Copy biến\n                        </Button>\n                        <Button onClick={handleTestEmail} variant=\"outline\" size=\"sm\" className=\"font-medium\">\n                          <TestTube className=\"mr-2 h-4 w-4\" />\n                          Test\n                        </Button>\n                        {isEditing ? (\n                          <>\n                            <Button\n                              onClick={handleSaveTemplate} // Removed font-dosis-medium\n                              className=\"bg-green-600 hover:bg-green-700 font-medium\"\n                            >\n                              Lưu\n                            </Button>\n                            <Button variant=\"outline\" onClick={() => setIsEditing(false)} className=\"font-medium\">\n                              Hủy\n                            </Button>\n                          </>\n                        ) : ( // Removed font-dosis-medium\n                          <Button variant=\"outline\" onClick={() => setIsEditing(true)} className=\"font-medium\">\n                            <Edit className=\"mr-2 h-4 w-4\" />\n                            Sửa\n                          </Button>\n                        )}\n                      </div>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div>\n                      <Label className=\"font-medium\">Tên mẫu</Label>\n                      <Input\n                        value={selectedTemplate.name}\n                        onChange={(e) => setSelectedTemplate({ ...selectedTemplate, name: e.target.value })}\n                        disabled={!isEditing}\n                        className=\"font-sans\"\n                      />\n                    </div>\n\n                    <div>\n                      <Label className=\"font-medium\">Chủ đề email</Label>\n                      <Input\n                        value={selectedTemplate.subject}\n                        onChange={(e) => setSelectedTemplate({ ...selectedTemplate, subject: e.target.value })}\n                        disabled={!isEditing}\n                        placeholder=\"Chủ đề email...\"\n                        className=\"font-sans\"\n                      />\n                    </div>\n\n                    <div>\n                      <Label className=\"font-medium\">Loại nội dung</Label>\n                      <Select\n                        value={selectedTemplate.type}\n                        onValueChange={(value) =>\n                          setSelectedTemplate({ ...selectedTemplate, type: value as \"html\" | \"text\" })\n                        }\n                        disabled={!isEditing}\n                      >\n                        <SelectTrigger className=\"font-sans\">\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"text\" className=\"font-sans\">\n                            Văn bản thuần\n                          </SelectItem>\n                          <SelectItem value=\"html\" className=\"font-sans\">\n                            HTML\n                          </SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div>\n                      <Label className=\"font-medium\">Nội dung email</Label>\n                      {isEditing ? (\n                        <RichTextEditor\n                          value={selectedTemplate.content}\n                          onChange={(content, html) =>\n                            setSelectedTemplate({\n                              ...selectedTemplate,\n                              content,\n                              htmlContent: html,\n                            })\n                          }\n                          mode={selectedTemplate.type}\n                          placeholder=\"Nội dung email...\"\n                        />\n                      ) : (\n                        <div className=\"border border-gray-600 rounded-lg p-4 min-h-[200px] bg-gray-700\">\n                          {selectedTemplate.type === \"html\" ? (\n                            <div dangerouslySetInnerHTML={{ __html: selectedTemplate.content }} />\n                          ) : (\n                            <pre className=\"whitespace-pre-wrap text-sm font-sans\">{selectedTemplate.content}</pre>\n                          )}\n                        </div>\n                      )}\n                    </div>\n\n                    <div> {/* Removed font-dosis-medium */}\n                      <Label className=\"font-medium\">Biến sẵn có</Label>\n                      <div className=\"flex flex-wrap gap-2 mt-2\">\n                        {[\n                          \"tennghesi\",\n                          \"tenbaihat\",\n                          \"id\",\n                          \"trangthai\",\n                          \"ngaygui\",\n                          \"ngayphathanh\",\n                          \"tenmanager\",\n                          \"email\",\n                          \"tenlabel\",\n                          \"username\",\n                          \"vaitro\",\n                        ].map((variable) => (\n                          <button\n                            key={variable}\n                            type=\"button\"\n                            className=\"px-2 py-1 bg-purple-600 text-white text-xs rounded cursor-pointer hover:bg-purple-700\"\n                            onClick={() => {\n                              if (isEditing) {\n                                const newContent = selectedTemplate.content + `[${variable}]`\n                                setSelectedTemplate({ ...selectedTemplate, content: newContent })\n                              }\n                            }}\n                            onKeyDown={(e) => {\n                              if ((e.key === \"Enter\" || e.key === \" \") && isEditing) {\n                                e.preventDefault();\n                                const newContent = selectedTemplate.content + `[${variable}]`\n                                setSelectedTemplate({ ...selectedTemplate, content: newContent })\n                              }\n                            }}\n                            tabIndex={0}\n                            aria-label={`Chèn biến ${variable}`}\n                          >\n                            [{variable}]\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ) : (\n                <Card className=\"bg-gray-800 border-gray-700\">\n                  <CardContent className=\"p-8 text-center\">\n                    <FileText className=\"mx-auto h-12 w-12 text-gray-500 mb-4 font-sans\" />\n                    <p className=\"text-gray-400 font-sans\">Chọn một mẫu email để xem hoặc chỉnh sửa</p>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          </div>\n        </TabsContent>\n\n        {/* SMTP Settings */}\n        <TabsContent value=\"settings\" className=\"space-y-6\">\n          <Card className=\"bg-gray-800 border-gray-700 font-sans\">\n            <CardHeader> {/* Removed font-dosis-semibold */}\n              <CardTitle className=\"flex items-center font-semibold\">\n                <Settings className=\"mr-2\" />\n                Cài đặt SMTP\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <Label className=\"font-dosis-medium\">SMTP Server</Label>\n                  <Input\n                    value={smtpSettings.smtpServer}\n                    onChange={(e) => setSmtpSettings({ ...smtpSettings, smtpServer: e.target.value })}\n                    placeholder=\"smtp.mail.me.com\"\n                    className=\"font-dosis\"\n                  />\n                </div>\n                <div>\n                  <Label className=\"font-dosis-medium\">Port</Label>\n                  <Input\n                    value={smtpSettings.smtpPort}\n                    onChange={(e) => setSmtpSettings({ ...smtpSettings, smtpPort: e.target.value })}\n                    placeholder=\"587\"\n                    className=\"font-dosis\"\n                  />\n                </div>\n                <div>\n                  <Label className=\"font-dosis-medium\">Username</Label>\n                  <Input\n                    value={smtpSettings.smtpUsername}\n                    onChange={(e) => setSmtpSettings({ ...smtpSettings, smtpUsername: e.target.value })}\n                    placeholder=\"your-email@example.com\"\n                    className=\"font-dosis\"\n                  />\n                </div>\n                <div>\n                  <Label className=\"font-dosis-medium\">Password</Label>\n                  <Input\n                    type=\"password\"\n                    value={smtpSettings.smtpPassword || \"\"} // Handle undefined password\n                    onChange={(e) => setSmtpSettings({ ...smtpSettings, smtpPassword: e.target.value })}\n                    placeholder=\"grsa-aaxz-midn-pjta\"\n                    className=\"font-dosis\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                {smtpSettings.connected ? (\n                  <>\n                    <CheckCircle className=\"h-5 w-5 text-green-400\" />\n                    <span className=\"text-green-400 font-dosis\">Đã kết nối (theo cài đặt đã lưu)</span>\n                  </>\n                ) : (\n                  <span className=\"text-yellow-400 font-dosis\">Chưa kết nối hoặc chưa lưu cài đặt.</span>\n                )}\n              </div>\n\n              <div className=\"flex space-x-2\">\n                <Button\n                  onClick={() => {\n                    localStorage.setItem(SMTP_LOCALSTORAGE_KEY, JSON.stringify({ ...smtpSettings, connected: false })) // Reset connected status on save, require re-test\n                    showModal(\"Lưu thành công\", [\"Đã lưu cài đặt SMTP. Vui lòng test lại kết nối.\"], \"success\")\n                  }}\n                  className=\"bg-green-600 hover:bg-green-700 font-dosis-medium\"\n                >\n                  <Settings className=\"mr-2 h-4 w-4\" />\n                  Lưu cài đặt\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  onClick={async () => {\n                    if (!smtpSettings.smtpUsername) {\n                      showModal(\"Lỗi Test SMTP\", [\"Vui lòng nhập Username SMTP.\"], \"error\");\n                      return;\n                    }\n                    // Sử dụng hàm sendEmail để test, gửi email test đến chính nó\n                    const testEmailDetails: EmailDetails = {\n                      from: smtpSettings.smtpUsername,\n                      to: smtpSettings.smtpUsername,\n                      subject: `Test Email - Email Center - ${new Date().toISOString()}`,\n                      textBody: `Đây là email test từ Trung tâm Email.\\nCấu hình SMTP của bạn hoạt động bình thường!`,\n                    };\n                    const result = await sendEmail(testEmailDetails);\n                    setSmtpSettings({ ...smtpSettings, connected: result.success }); // Cập nhật trạng thái connected\n                    showModal(result.success ? \"Test SMTP Thành Công\" : \"Test SMTP Thất Bại\", [result.message], result.success ? \"success\" : \"error\");\n                  }}\n                  className=\"font-dosis-medium\"\n                >\n                  <TestTube className=\"mr-2 h-4 w-4\" />\n                  Test kết nối\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Sync Tab */}\n        <TabsContent value=\"sync\" className=\"space-y-6\">\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center font-dosis-semibold\">\n                <RotateCw className=\"mr-2\" />\n                Đồng bộ email\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"space-y-4\">\n                  <h4 className=\"font-dosis-semibold\">Trạng thái đồng bộ:</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between items-center p-3 bg-gray-700 rounded\">\n                      <span className=\"font-dosis\">SMTP Connection</span>\n                      <span className=\"px-2 py-1 bg-green-600 text-white rounded text-sm font-dosis-medium\">\n                        Connected\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center p-3 bg-gray-700 rounded\">\n                      <span className=\"font-dosis\">Email Sync</span>\n                      <span\n                        className={`px-2 py-1 rounded text-sm font-dosis-medium ${syncStatus === \"Connected\" ? \"bg-green-600 text-white\" : \"bg-yellow-600 text-white\"\n                          }`}\n                      >\n                        {syncStatus}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center p-3 bg-gray-700 rounded\">\n                      <span className=\"font-dosis\">Auto Sync</span>\n                      <span className=\"px-2 py-1 bg-blue-600 text-white rounded text-sm font-dosis-medium\">\n                        Enabled\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <h4 className=\"font-dosis-semibold\">Thao tác:</h4>\n                  <div className=\"space-y-2\">\n                    <Button\n                      onClick={syncEmails}\n                      className=\"w-full bg-blue-600 hover:bg-blue-700 font-dosis-medium\"\n                      disabled={syncStatus === \"Syncing...\"}\n                    >\n                      <RotateCw className=\"h-4 w-4 mr-2\" />\n                      {syncStatus === \"Syncing...\" ? \"Đang đồng bộ...\" : \"Đồng bộ ngay\"}\n                    </Button>\n                    <Button\n                      onClick={() => showModal(\"Backup thành công\", [\"Đã backup toàn bộ email\"], \"success\")}\n                      className=\"w-full bg-green-600 hover:bg-green-700 font-dosis-medium\"\n                    >\n                      <Download className=\"h-4 w-4 mr-2\" />\n                      Backup email\n                    </Button>\n                    <Button\n                      onClick={() => showModal(\"Cài đặt đã lưu\", [\"Đã bật tự động đồng bộ mỗi 30 giây\"], \"success\")}\n                      className=\"w-full bg-purple-600 hover:bg-purple-700 font-dosis-medium\"\n                    >\n                      <Settings className=\"h-4 w-4 mr-2\" />\n                      Cài đặt auto-sync\n                    </Button>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"border-t border-gray-600 pt-4\">\n                <h4 className=\"font-dosis-semibold mb-2\">Lịch sử đồng bộ:</h4>\n                <div className=\"text-sm text-gray-400 space-y-1 font-dosis\">\n                  <p>• {lastSync} - Email sync completed</p>\n                  <p>• {new Date(Date.now() - 1800000).toLocaleString(\"vi-VN\")} - SMTP connection verified</p>\n                  <p>• {new Date(Date.now() - 3600000).toLocaleString(\"vi-VN\")} - Auto-sync enabled</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n\n// Default export for compatibility\nexport default EmailCenterView\n"],"names":[],"mappings":"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","debugId":null}}]
}