{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///F:/studio.ankun/components/views/upload-form-view.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\nimport { useState, useEffect, useRef } from \"react\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { ThemeToggle } from \"@/components/theme-toggle\"\r\nimport { logUIInteraction, logSubmissionActivity } from \"@/lib/client-activity-log\"\r\nimport type { User } from \"@/types/user\"\r\nimport type {\r\n  Submission,\r\n  TrackInfo,\r\n  AdditionalArtist,\r\n  MainCategory,\r\n  SubCategory,\r\n  ReleaseType,\r\n  CopyrightOwnershipStatus,\r\n  ReleaseHistoryStatus,\r\n  LyricsStatus,\r\n  Platform,\r\n  ArtistPrimaryRole,\r\n  AdditionalArtistRole,\r\n  PrismaSubmission,\r\n  PrismaTrack,\r\n  PrismaReleaseType,\r\n  PrismaSubmissionStatus,\r\n  convertLegacySubmissionToPrisma\r\n} from \"@/types/submission\"\r\nimport {\r\n  Rocket,\r\n  UserIcon,\r\n  Disc3,\r\n  UploadIcon,\r\n  Play,\r\n  Pause,\r\n  Plus,\r\n  Trash2,\r\n  X,\r\n} from \"lucide-react\"\r\nimport { useAuth } from \"@/components/auth-provider\"\r\nimport { validateImageFile, validateAudioFile, getMinimumReleaseDate } from \"@/lib/utils\"\r\nimport { multiDB } from \"@/lib/database-api-service\"\r\n\r\ninterface AudioTrack {\r\n  file: File\r\n  info: TrackInfo\r\n  id: string\r\n}\r\n\r\ninterface UploadFormViewProps {\r\n  onSubmissionAdded: (submission: Submission) => void\r\n  showModal: (title: string, messages: string[], type?: \"error\" | \"success\") => void\r\n}\r\n\r\nexport default function UploadFormView({ onSubmissionAdded, showModal }: Readonly<UploadFormViewProps>) {\r\n  const { user: currentUser } = useAuth();\r\n\r\n  // Form state - initialize with safe defaults\r\n  const [fullName, setFullName] = useState(\"\")\r\n  const [artistName, setArtistName] = useState(\"\")\r\n  const [artistRole, setArtistRole] = useState<ArtistPrimaryRole>(\"singer\")\r\n  const [songTitle, setSongTitle] = useState(\"\")\r\n  const [albumName, setAlbumName] = useState(\"\")\r\n  const [userEmail, setUserEmail] = useState(\"\")\r\n  const [mainCategory, setMainCategory] = useState<MainCategory>(\"pop\")\r\n  const [subCategory, setSubCategory] = useState<SubCategory>(\"official\")\r\n  const [releaseType, setReleaseType] = useState<ReleaseType>(\"single\")\r\n  const [isCopyrightOwner, setIsCopyrightOwner] = useState<CopyrightOwnershipStatus>(\"yes\")\r\n  const [hasBeenReleased, setHasBeenReleased] = useState<ReleaseHistoryStatus>(\"no\")\r\n  const [platforms, setPlatforms] = useState<Platform[]>([])\r\n  const [hasLyrics, setHasLyrics] = useState<LyricsStatus>(\"no\")\r\n  const [lyrics, setLyrics] = useState(\"\")\r\n  const [releaseDate, setReleaseDate] = useState(\"\")\r\n  const [isUploading, setIsUploading] = useState(false)\r\n  const [lastISRCCounter, setLastISRCCounter] = useState(1000)\r\n\r\n  // File states\r\n  const [imageFile, setImageFile] = useState<File | null>(null)\r\n  const [imagePreviewUrl, setImagePreviewUrl] = useState<string>(\"\")\r\n  const [audioTracks, setAudioTracks] = useState<AudioTrack[]>([])\r\n\r\n  // Audio player state\r\n  const [currentlyPlaying, setCurrentlyPlaying] = useState<string | null>(null)\r\n  const audioRefs = useRef<{ [key: string]: HTMLAudioElement }>({})\r\n\r\n  // Set minimum release date and user data on component mount\r\n  useEffect(() => {\r\n    setReleaseDate(getMinimumReleaseDate())\r\n    if (currentUser) {\r\n      setFullName(currentUser.fullName ?? \"\")\r\n      setArtistName(currentUser.role === \"Artist\" ? currentUser.username : \"\")\r\n      setUserEmail(currentUser.email ?? \"\")\r\n    }\r\n  }, [currentUser])\r\n\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"p-6 min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-xl font-semibold text-gray-700 mb-2\">Đang tải thông tin</h2>\r\n          <p className=\"text-gray-500\">Vui lòng chờ trong giây lát...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Additional artist management functions\r\n  const addAdditionalArtist = (trackId: string) => {\r\n    setAudioTracks(prev =>\r\n      prev.map((track) => {\r\n        if (track.id === trackId) {\r\n          return {\r\n            ...track,\r\n            info: {\r\n              ...track.info,\r\n              additionalArtists: [\r\n                ...track.info.additionalArtists,\r\n                {\r\n                  name: \"\",\r\n                  fullName: \"\",\r\n                  role: \"featuring\" as AdditionalArtistRole,\r\n                  percentage: 0\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n        return track\r\n      })\r\n    )\r\n  }\r\n\r\n  const removeAdditionalArtist = (trackId: string, artistIndex: number) => {\r\n    setAudioTracks(prev =>\r\n      prev.map((track) => {\r\n        if (track.id === trackId) {\r\n          return {\r\n            ...track,\r\n            info: {\r\n              ...track.info,\r\n              additionalArtists: track.info.additionalArtists.filter((_, index) => index !== artistIndex)\r\n            }\r\n          }\r\n        }\r\n        return track\r\n      })\r\n    )\r\n  }\r\n\r\n  const updateAdditionalArtist = (trackId: string, artistIndex: number, field: keyof AdditionalArtist, value: string | number) => {\r\n    setAudioTracks(prev =>\r\n      prev.map((track) => {\r\n        if (track.id === trackId) {\r\n          return {\r\n            ...track,\r\n            info: {\r\n              ...track.info,\r\n              additionalArtists: track.info.additionalArtists.map((artist, index) => {\r\n                if (index === artistIndex) {\r\n                  return { ...artist, [field]: value }\r\n                }\r\n                return artist\r\n              })\r\n            }\r\n          }\r\n        }\r\n        return track\r\n      })\r\n    )\r\n  }\r\n\r\n  // Audio playback functions\r\n  const toggleAudioPlayback = (trackId: string, audioUrl: string) => {\r\n    if (currentlyPlaying === trackId) {\r\n      // Pause current track\r\n      audioRefs.current[trackId]?.pause()\r\n      setCurrentlyPlaying(null)\r\n    } else {\r\n      // Stop any currently playing track\r\n      if (currentlyPlaying) {\r\n        audioRefs.current[currentlyPlaying]?.pause()\r\n      }\r\n\r\n      // Play new track\r\n      if (!audioRefs.current[trackId]) {\r\n        audioRefs.current[trackId] = new Audio(audioUrl)\r\n        audioRefs.current[trackId].addEventListener('ended', () => {\r\n          setCurrentlyPlaying(null)\r\n        })\r\n      }\r\n\r\n      audioRefs.current[trackId].play()\r\n      setCurrentlyPlaying(trackId)\r\n    }\r\n  }\r\n\r\n  // Platform selection handlers\r\n  const handlePlatformChange = (platform: Platform, checked: boolean) => {\r\n    if (checked) {\r\n      setPlatforms(prev => [...prev, platform])\r\n    } else {\r\n      setPlatforms(prev => prev.filter(p => p !== platform))\r\n      }\r\n  }    // File upload handlers\r\n  const handleImageUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0]\r\n    if (!file) return\r\n\r\n    try {\r\n      const validation = await validateImageFile(file)\r\n      if (!validation.valid) {\r\n        showModal(\"Lỗi\", validation.errors, \"error\")\r\n        return\r\n        }\r\n\r\n      setImageFile(file)\r\n      setImagePreviewUrl(URL.createObjectURL(file))\r\n    } catch (error) {\r\n      showModal(\"Lỗi\", [\"Có lỗi xảy ra khi tải ảnh\"], \"error\")\r\n    }\r\n  }\r\n\r\n  const handleAudioUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files\r\n    if (!files || files.length === 0) return\r\n\r\n    Array.from(files).forEach(async (file) => {\r\n      try {\r\n        const validation = validateAudioFile(file)\r\n        if (!validation.valid) {\r\n          showModal(\"Lỗi\", [`${file.name}: ${validation.errors.join(\", \")}`], \"error\")\r\n          return\r\n        } const { isrc, newCounter } = generateISRC(currentUser, lastISRCCounter)\r\n        setLastISRCCounter(newCounter)\r\n\r\n        const newTrack: AudioTrack = {\r\n          file,\r\n          id: isrc,\r\n          info: {\r\n            fileName: file.name,\r\n            title: file.name.replace(/\\.[^/.]+$/, \"\"), // Default to filename without extension\r\n            isrc: isrc,\r\n            songTitle: file.name.replace(/\\.[^/.]+$/, \"\"), // Default to filename without extension\r\n            artistName: artistName,\r\n            artistFullName: fullName,\r\n            additionalArtists: []\r\n          }\r\n        }\r\n\r\n        setAudioTracks(prev => [...prev, newTrack])\r\n      } catch (error) {\r\n        showModal(\"Lỗi\", [`Có lỗi xảy ra khi tải file ${file.name}`], \"error\")\r\n      }\r\n    })\r\n    }\r\n\r\n  const removeAudioTrack = (trackId: string) => {\r\n    setAudioTracks(prev => prev.filter(track => track.id !== trackId))\r\n    if (currentlyPlaying === trackId) {\r\n      audioRefs.current[trackId]?.pause()\r\n      setCurrentlyPlaying(null)\r\n    }\r\n    if (audioRefs.current[trackId]) {\r\n      URL.revokeObjectURL(audioRefs.current[trackId].src)\r\n      delete audioRefs.current[trackId]\r\n    }\r\n  }\r\n\r\n  // ISRC function - generates proper formatted ISRC code\r\n  const generateISRC = (user: User, lastCounter: number) => {\r\n  // Format: VNA2P2500001 where:\r\n  // VN - Country code for Vietnam\r\n  // A2P - Issuer code for An Kun Studio\r\n  // 25 - Year (2025)\r\n  // 00001 - Sequential 5-digit number\r\n\r\n    const newCounter = lastCounter + 1\r\n    const year = new Date().getFullYear().toString().slice(2) // Get last 2 digits of year\r\n    const isrc = `VNA2P${year}${String(newCounter).padStart(5, \"0\")}`\r\n\r\n    return {\r\n      isrc,\r\n      newCounter,\r\n    }\r\n  }\r\n\r\n  // Form submission handler\r\n  const handleSubmit = async () => {\r\n    // Validation\r\n    const validationErrors = [];\r\n\r\n    // Check required fields\r\n    if (!songTitle.trim()) validationErrors.push(\"Vui lòng nhập tên bài hát\");\r\n    if (!artistName.trim()) validationErrors.push(\"Vui lòng nhập tên nghệ sĩ\");\r\n    if (!fullName.trim()) validationErrors.push(\"Vui lòng nhập họ tên đầy đủ\");\r\n    if (!userEmail.trim()) validationErrors.push(\"Vui lòng nhập email\");\r\n    if (!userEmail.includes('@')) validationErrors.push(\"Email không hợp lệ\");\r\n    if (audioTracks.length === 0) validationErrors.push(\"Vui lòng upload ít nhất một file nhạc\");\r\n    if (!imageFile) validationErrors.push(\"Vui lòng upload ảnh bìa\");\r\n    if (!releaseDate) validationErrors.push(\"Vui lòng chọn ngày phát hành\");\r\n\r\n    // Check for empty required fields in audio tracks\r\n    const invalidTracks = audioTracks.filter(track => !track.info.songTitle.trim());\r\n    if (invalidTracks.length > 0) {\r\n      validationErrors.push(`${invalidTracks.length} track chưa có tên bài hát`);\r\n    }\r\n\r\n    // Special validation for additional artists if present\r\n    audioTracks.forEach(track => {\r\n      track.info.additionalArtists.forEach((artist, index) => {\r\n        if (!artist.name.trim()) {\r\n          validationErrors.push(`Track \"${track.info.songTitle}\": Nghệ sĩ phối hợp #${index + 1} chưa có tên`);\r\n        }\r\n      });\r\n    });\r\n\r\n    if (validationErrors.length > 0) {\r\n      showModal(\"Lỗi\", validationErrors, \"error\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n\r\n    try {\r\n      // Log the start of submission process\r\n      logUIInteraction('form', 'upload-submission-form', {\r\n        trackCount: audioTracks.length,\r\n        hasImage: !!imageFile,\r\n        mainCategory,\r\n        subCategory,\r\n        releaseType\r\n      });\r\n\r\n      const { isrc, newCounter } = generateISRC(currentUser, lastISRCCounter);\r\n      setLastISRCCounter(newCounter);\r\n\r\n      // Upload ảnh bìa\r\n      const imageFormData = new FormData();\r\n      if (imageFile) {\r\n        imageFormData.append(\"file\", imageFile);\r\n      }\r\n      imageFormData.append(\"type\", \"image\");\r\n      imageFormData.append(\"userId\", currentUser.id);\r\n      imageFormData.append(\"artistName\", artistName);\r\n      imageFormData.append(\"songTitle\", songTitle);\r\n      imageFormData.append(\"isrc\", isrc);\r\n\r\n      const imageResponse = await fetch(\"/api/upload\", {\r\n        method: \"POST\",\r\n        body: imageFormData,\r\n      });\r\n\r\n      const imageResult = await imageResponse.json();\r\n      if (!imageResult.success) {\r\n        throw new Error(`Lỗi upload ảnh: ${imageResult.message}`);\r\n      }\r\n\r\n      // Upload các file âm thanh và tạo track data\r\n      const tracksData: Omit<PrismaTrack, 'id' | 'createdAt' | 'updatedAt' | 'submissionId'>[] = [];\r\n      \r\n      for (const track of audioTracks) {\r\n        const audioFormData = new FormData();\r\n        audioFormData.append(\"file\", track.file);\r\n        audioFormData.append(\"type\", \"audio\");\r\n        audioFormData.append(\"userId\", currentUser.id);\r\n        audioFormData.append(\"artistName\", artistName);\r\n        audioFormData.append(\"songTitle\", track.info.songTitle);\r\n        audioFormData.append(\"isrc\", track.id);\r\n\r\n        const audioResponse = await fetch(\"/api/upload\", {\r\n          method: \"POST\",\r\n          body: audioFormData,\r\n        });\r\n\r\n        const audioResult = await audioResponse.json();\r\n        if (!audioResult.success) {\r\n          throw new Error(`Lỗi upload âm thanh ${track.file.name}: ${audioResult.message}`);\r\n        }\r\n\r\n        // Create track data for Prisma structure\r\n        tracksData.push({\r\n          title: track.info.songTitle,\r\n          artist: track.info.artistName,\r\n          filePath: audioResult.url,\r\n          duration: track.info.duration || 0,\r\n          isrc: track.id,\r\n          fileName: track.file.name,\r\n          artistFullName: track.info.artistFullName,\r\n          fileSize: track.file.size,\r\n          format: track.file.type,\r\n          bitrate: null, // Will be populated by audio processing\r\n          sampleRate: null // Will be populated by audio processing\r\n        });\r\n      }\r\n\r\n      // Convert release type to Prisma enum\r\n      const prismaReleaseType: PrismaReleaseType = \r\n        releaseType === 'single' ? PrismaReleaseType.SINGLE :\r\n        releaseType === 'ep' ? PrismaReleaseType.EP :\r\n        releaseType === 'album' ? PrismaReleaseType.ALBUM :\r\n        releaseType === 'lp' ? PrismaReleaseType.ALBUM :\r\n        PrismaReleaseType.SINGLE;\r\n\r\n      // Create submission data for Prisma structure\r\n      const submissionData: Omit<PrismaSubmission, 'id' | 'createdAt' | 'updatedAt'> = {\r\n        title: songTitle,\r\n        artist: artistName,\r\n        upc: null, // Will be generated later\r\n        type: prismaReleaseType,\r\n        coverImagePath: imageResult.url,\r\n        releaseDate: new Date(releaseDate),\r\n        status: PrismaSubmissionStatus.PENDING,\r\n        metadataLocked: false,\r\n        published: false,\r\n        albumName: albumName || null,\r\n        mainCategory: mainCategory,\r\n        subCategory: subCategory || null,\r\n        platforms: hasBeenReleased === \"yes\" ? { platforms } : null,\r\n        distributionLink: null,\r\n        distributionPlatforms: null,\r\n        statusVietnamese: \"Đã nhận, đang chờ duyệt\",\r\n        rejectionReason: null,\r\n        notes: hasLyrics === \"yes\" ? lyrics : null,\r\n        userId: currentUser.id,\r\n        labelId: currentUser.labelId || '' // Use user's label or default\r\n      };\r\n\r\n      // Use the new relational database service method\r\n      const result = await multiDB.createSubmissionWithTracks(submissionData, tracksData);\r\n\r\n      if (!result.success) {\r\n        throw new Error(result.message || \"Không thể tạo submission\");\r\n      }\r\n\r\n      // Convert back to legacy format for backward compatibility\r\n      const legacySubmission: Submission = {\r\n        id: result.data!.submission.id,\r\n        userId: currentUser.id,\r\n        isrc: tracksData[0]?.isrc || \"\",\r\n        uploaderUsername: currentUser.username,\r\n        artistName,\r\n        songTitle,\r\n        albumName,\r\n        userEmail,\r\n        imageFile: imageFile?.name ?? \"\",\r\n        imageUrl: imageResult.url,\r\n        audioUrl: tracksData.length === 1 ? tracksData[0].filePath : undefined,\r\n        audioUrls: tracksData.map(track => track.filePath),\r\n        audioFilesCount: tracksData.length,\r\n        status: \"Đã nhận, đang chờ duyệt\",\r\n        submissionDate: new Date().toISOString(),\r\n        mainCategory,\r\n        subCategory,\r\n        releaseType,\r\n        isCopyrightOwner,\r\n        hasBeenReleased,\r\n        platforms: hasBeenReleased === \"yes\" ? platforms : [],\r\n        hasLyrics,\r\n        lyrics: hasLyrics === \"yes\" ? lyrics : \"\",\r\n        releaseDate,\r\n        artistRole,\r\n        fullName,\r\n        additionalArtists: [],\r\n        trackInfos: audioTracks.map(track => track.info),\r\n      };\r\n\r\n      onSubmissionAdded(legacySubmission);\r\n\r\n      // Log the successful submission\r\n      logSubmissionActivity(result.data!.submission.id, 'create', 'success', {\r\n        artistName,\r\n        songTitle,\r\n        trackCount: tracksData.length,\r\n        mainCategory,\r\n        subCategory,\r\n        releaseType,\r\n        releaseDate\r\n      });\r\n\r\n      // Reset form\r\n      resetForm();\r\n\r\n      showModal(\"Thành công\", [\"Đã gửi bài hát để chờ duyệt!\"], \"success\");\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : \"Có lỗi xảy ra khi gửi bài hát\";\r\n\r\n      // Log the submission error\r\n      logSubmissionActivity('unknown', 'create', 'error', {\r\n        artistName,\r\n        songTitle,\r\n        error: errorMessage,\r\n        trackCount: audioTracks.length\r\n      });\r\n\r\n      showModal(\"Lỗi\", [errorMessage], \"error\");\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setArtistName(currentUser.role === \"Artist\" ? currentUser.username : \"\")\r\n    setSongTitle(\"\")\r\n    setAlbumName(\"\")\r\n    setUserEmail(currentUser.email ?? \"\")\r\n    setMainCategory(\"pop\")\r\n    setSubCategory(\"official\")\r\n    setReleaseType(\"single\")\r\n    setIsCopyrightOwner(\"yes\")\r\n    setHasBeenReleased(\"no\")\r\n    setPlatforms([])\r\n    setHasLyrics(\"no\")\r\n    setLyrics(\"\")\r\n    setImageFile(null)\r\n    setImagePreviewUrl(\"\")\r\n    setAudioTracks([])\r\n    setReleaseDate(getMinimumReleaseDate())\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-50 to-blue-50 dark:from-gray-900 dark:to-blue-950 p-4\">\r\n      <div className=\"max-w-4xl mx-auto p-6 space-y-8\">\r\n        <div className=\"flex justify-between items-center mb-8\">\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold mb-2\">🎵 Upload Nhạc Để Phát Hành Toàn Cầu</h1>\r\n            <p className=\"text-muted-foreground\">Tải lên nhạc của bạn và chia sẻ với thế giới</p>\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <ThemeToggle />\r\n          </div>\r\n        </div>\r\n\r\n        <Tabs\r\n          defaultValue=\"basic\"\r\n          className=\"w-full\"\r\n                                        onValueChange={(value) => {\r\n            logUIInteraction('tab', value as any, {\r\n              formStep: value\r\n            });\r\n          }}\r\n        >\r\n          <TabsList className=\"grid w-full grid-cols-4\">\r\n            <TabsTrigger value=\"basic\" className=\"flex items-center gap-2\">\r\n              <UserIcon className=\"h-4 w-4\" />\r\n              Thông tin cơ bản\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"media\" className=\"flex items-center gap-2\">\r\n              <UploadIcon className=\"h-4 w-4\" />\r\n              Media Files\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"metadata\" className=\"flex items-center gap-2\">\r\n              <Disc3 className=\"h-4 w-4\" />\r\n              Metadata\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"release\" className=\"flex items-center gap-2\">\r\n              <Rocket className=\"h-4 w-4\" />\r\n              Phát hành\r\n            </TabsTrigger>\r\n          </TabsList>\r\n\r\n          <TabsContent value=\"basic\" className=\"space-y-6\">\r\n            <Card>\r\n              <CardContent className=\"p-6 space-y-4\">\r\n                <h3 className=\"text-xl font-semibold mb-4\">Thông tin nghệ sĩ</h3>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"fullName\">Họ và tên đầy đủ *</Label>\r\n                    <Input\r\n                      id=\"fullName\"\r\n                      value={fullName}\r\n                      onChange={(e) => setFullName(e.target.value)}\r\n                      placeholder=\"Ví dụ: Nguyễn Văn A\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label htmlFor=\"artistName\">Tên nghệ sĩ *</Label>\r\n                    <Input\r\n                      id=\"artistName\"\r\n                      value={artistName}\r\n                      onChange={(e) => setArtistName(e.target.value)}\r\n                      placeholder=\"Ví dụ: AnKun\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"userEmail\">Email *</Label>\r\n                    <Input\r\n                      id=\"userEmail\"\r\n                      type=\"email\"\r\n                      value={userEmail}\r\n                      onChange={(e) => setUserEmail(e.target.value)}\r\n                      placeholder=\"email@example.com\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label htmlFor=\"artistRole\">Vai trò chính *</Label>\r\n                    <Select value={artistRole} onValueChange={(value: ArtistPrimaryRole) => setArtistRole(value)}>\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"singer\">Ca sĩ</SelectItem>\r\n                        <SelectItem value=\"singer-songwriter\">Singer-Songwriter</SelectItem>\r\n                        <SelectItem value=\"rapper\">Rapper</SelectItem>\r\n                        <SelectItem value=\"producer\">Producer</SelectItem>\r\n                        <SelectItem value=\"composer\">Composer</SelectItem>\r\n                        <SelectItem value=\"songwriter\">Songwriter</SelectItem>\r\n                        <SelectItem value=\"instrumental\">Instrumental</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"songTitle\">Tên bài hát *</Label>\r\n                    <Input\r\n                      id=\"songTitle\"\r\n                      value={songTitle}\r\n                      onChange={(e) => setSongTitle(e.target.value)}\r\n                      placeholder=\"Tên bài hát của bạn\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label htmlFor=\"albumName\">Tên album (tùy chọn)</Label>\r\n                    <Input\r\n                      id=\"albumName\"\r\n                      value={albumName}\r\n                      onChange={(e) => setAlbumName(e.target.value)}\r\n                      placeholder=\"Tên album (nếu có)\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"media\" className=\"space-y-6\">\r\n            <Card>\r\n              <CardContent className=\"p-6 space-y-6\">\r\n                <h3 className=\"text-xl font-semibold mb-4\">Tải lên Media Files</h3>\r\n\r\n                {/* Image Upload */}\r\n                <div>\r\n                  <Label htmlFor=\"imageUpload\">Ảnh bìa bài hát (JPG, 4000x4000px, tối đa 10MB) *</Label>\r\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\r\n                    <input\r\n                      id=\"imageUpload\"\r\n                      type=\"file\"\r\n                      accept=\"image/jpeg,image/jpg\"\r\n                      onChange={handleImageUpload}\r\n                      className=\"hidden\"\r\n                    />\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outline\"\r\n                      onClick={() => document.getElementById('imageUpload')?.click()}\r\n                      className=\"mb-4\"\r\n                    >\r\n                      <UploadIcon className=\"mr-2 h-4 w-4\" />\r\n                      Chọn ảnh bìa\r\n                    </Button>\r\n                    {imagePreviewUrl && (\r\n                      <div className=\"mt-4\">\r\n                        <img\r\n                          src={imagePreviewUrl}\r\n                          alt=\"Preview\"\r\n                          className=\"mx-auto max-w-xs rounded-lg\"\r\n                        />\r\n                        <Button\r\n                          type=\"button\"\r\n                          variant=\"ghost\"\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            setImageFile(null)\r\n                            setImagePreviewUrl(\"\")\r\n                          }}\r\n                          className=\"mt-2\"\r\n                        >\r\n                          <X className=\"h-4 w-4 mr-2\" />\r\n                          Xóa ảnh\r\n                        </Button>\r\n                      </div>)}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Audio Upload */}\r\n                <div>\r\n                  <Label htmlFor=\"audioUpload\">File nhạc (WAV 24-bit, 2 kênh, 192kHz, tối đa 100MB mỗi file) *</Label>\r\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\r\n                    <input\r\n                      id=\"audioUpload\"\r\n                      type=\"file\"\r\n                      accept=\"audio/wav\"\r\n                      multiple\r\n                      onChange={handleAudioUpload}\r\n                      className=\"hidden\"\r\n                    />\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outline\"\r\n                      onClick={() => document.getElementById('audioUpload')?.click()}\r\n                      className=\"mb-4\"\r\n                    >\r\n                      <UploadIcon className=\"mr-2 h-4 w-4\" />\r\n                      Chọn file nhạc\r\n                    </Button>\r\n\r\n                    {audioTracks.length > 0 && (\r\n                      <div className=\"mt-4 space-y-4\">\r\n                        {audioTracks.map((track, index) => (<div key={track.id} className=\"border rounded-lg p-4\">\r\n                          <div className=\"flex items-center justify-between mb-2\">\r\n                            <span className=\"font-medium\">{track.file.name}</span>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Button\r\n                                type=\"button\"\r\n                                variant=\"ghost\"\r\n                                size=\"sm\"\r\n                                onClick={() => toggleAudioPlayback(track.id, URL.createObjectURL(track.file))}\r\n                              >\r\n                                {currentlyPlaying === track.id ? (\r\n                                  <Pause className=\"h-4 w-4\" />\r\n                                ) : (\r\n                                  <Play className=\"h-4 w-4\" />\r\n                                )}\r\n                              </Button>\r\n                              <Button\r\n                                type=\"button\"\r\n                                variant=\"ghost\"\r\n                                size=\"sm\"\r\n                                onClick={() => removeAudioTrack(track.id)}\r\n                              >\r\n                                <Trash2 className=\"h-4 w-4\" />\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Track title input field */}\r\n                          <div className=\"mb-4\">\r\n                            <Label htmlFor={`track-title-${track.id}`}>Tên bài hát</Label>\r\n                            <Input\r\n                              id={`track-title-${track.id}`}\r\n                              value={track.info.songTitle}\r\n                              onChange={(e) => {\r\n                                setAudioTracks(prev =>\r\n                                  prev.map(t => {\r\n                                    if (t.id === track.id) {\r\n                                      return {\r\n                                        ...t,\r\n                                        info: {\r\n                                          ...t.info,\r\n                                          songTitle: e.target.value\r\n                                        }\r\n                                      };\r\n                                    }\r\n                                    return t;\r\n                                  })\r\n                                );\r\n                              }}\r\n                              placeholder=\"Nhập tên bài hát\"\r\n                              className=\"mt-1\"\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Additional Artists for this track */}\r\n                          <div className=\"mt-4\">\r\n                            <div className=\"flex items-center justify-between mb-2\">\r\n                              <Label>Nghệ sĩ phối hợp (tùy chọn)</Label>\r\n                              <Button\r\n                                type=\"button\"\r\n                                variant=\"outline\"\r\n                                size=\"sm\"\r\n                                onClick={() => addAdditionalArtist(track.id)}\r\n                              >\r\n                                <Plus className=\"h-4 w-4 mr-2\" />\r\n                                Thêm nghệ sĩ\r\n                              </Button>\r\n                            </div>\r\n\r\n                            {track.info.additionalArtists.map((artist, artistIndex) => (\r\n                              <div key={artistIndex} className=\"grid grid-cols-1 md:grid-cols-4 gap-2 mb-2 p-2 bg-gray-50 rounded\">\r\n                                <Input\r\n                                  placeholder=\"Tên nghệ sĩ\"\r\n                                  value={artist.name}\r\n                                  onChange={(e) => updateAdditionalArtist(track.id, artistIndex, 'name', e.target.value)}\r\n                                />\r\n                                <Input\r\n                                  placeholder=\"Họ tên đầy đủ\"\r\n                                  value={artist.fullName || \"\"}\r\n                                  onChange={(e) => updateAdditionalArtist(track.id, artistIndex, 'fullName', e.target.value)}\r\n                                />\r\n                                <Select\r\n                                  value={artist.role}\r\n                                  onValueChange={(value: AdditionalArtistRole) => updateAdditionalArtist(track.id, artistIndex, 'role', value)}\r\n                                >\r\n                                  <SelectTrigger>\r\n                                    <SelectValue />\r\n                                  </SelectTrigger>\r\n                                  <SelectContent>\r\n                                    <SelectItem value=\"featuring\">Featuring</SelectItem>\r\n                                    <SelectItem value=\"vocalist\">Vocalist</SelectItem>\r\n                                    <SelectItem value=\"rapper\">Rapper</SelectItem>\r\n                                    <SelectItem value=\"producer\">Producer</SelectItem>\r\n                                    <SelectItem value=\"composer\">Composer</SelectItem>\r\n                                    <SelectItem value=\"songwriter\">Songwriter</SelectItem>\r\n                                    <SelectItem value=\"instrumental\">Instrumental</SelectItem>\r\n                                  </SelectContent>\r\n                                </Select>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <Input\r\n                                    type=\"number\"\r\n                                    placeholder=\"% quyền\"\r\n                                    min=\"0\"\r\n                                    max=\"100\"\r\n                                    value={artist.percentage}\r\n                                    onChange={(e) => updateAdditionalArtist(track.id, artistIndex, 'percentage', parseInt(e.target.value) || 0)}\r\n                                  />\r\n                                  <Button\r\n                                    type=\"button\"\r\n                                    variant=\"ghost\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => removeAdditionalArtist(track.id, artistIndex)}\r\n                                  >\r\n                                    <X className=\"h-4 w-4\" />\r\n                                  </Button>\r\n                                </div>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                                </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"metadata\" className=\"space-y-6\">\r\n            <Card>\r\n              <CardContent className=\"p-6 space-y-4\">\r\n                <h3 className=\"text-xl font-semibold mb-4\">Thông tin metadata</h3>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"mainCategory\">Thể loại chính *</Label>\r\n                    <Select value={mainCategory} onValueChange={(value: MainCategory) => setMainCategory(value)}>\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"pop\">Pop</SelectItem>\r\n                        <SelectItem value=\"singer-songwriter\">Singer-Songwriter</SelectItem>\r\n                        <SelectItem value=\"hiphoprap\">Hip Hop/Rap</SelectItem>\r\n                        <SelectItem value=\"edm\">EDM</SelectItem>\r\n                        <SelectItem value=\"rnb\">R&B</SelectItem>\r\n                        <SelectItem value=\"ballad\">Ballad</SelectItem>\r\n                        <SelectItem value=\"acoustic\">Acoustic</SelectItem>\r\n                        <SelectItem value=\"indie\">Indie</SelectItem>\r\n                        <SelectItem value=\"other_main\">Khác</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label htmlFor=\"subCategory\">Thể loại phụ *</Label>\r\n                    <Select value={subCategory} onValueChange={(value: SubCategory) => setSubCategory(value)}>\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"official\">Official</SelectItem>\r\n                        <SelectItem value=\"cover\">Cover</SelectItem>\r\n                        <SelectItem value=\"vpop\">V-Pop</SelectItem>\r\n                        <SelectItem value=\"lofi\">Lo-fi</SelectItem>\r\n                        <SelectItem value=\"chill\">Chill</SelectItem>\r\n                        <SelectItem value=\"trap\">Trap</SelectItem>\r\n                        <SelectItem value=\"house\">House</SelectItem>\r\n                        <SelectItem value=\"alternative\">Alternative</SelectItem>\r\n                        <SelectItem value=\"folk\">Folk</SelectItem>\r\n                        <SelectItem value=\"other_sub\">Khác</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label htmlFor=\"releaseType\">Loại phát hành *</Label>\r\n                    <Select value={releaseType} onValueChange={(value: ReleaseType) => setReleaseType(value)}>\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"single\">Single</SelectItem>\r\n                        <SelectItem value=\"ep\">EP</SelectItem>\r\n                        <SelectItem value=\"lp\">LP</SelectItem>\r\n                        <SelectItem value=\"album\">Album</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label>Bạn có sở hữu bản quyền của bài hát này không? *</Label>\r\n                  <RadioGroup\r\n                    value={isCopyrightOwner}\r\n                    onValueChange={(value: CopyrightOwnershipStatus) => setIsCopyrightOwner(value)}\r\n                    className=\"flex gap-4 mt-2\"\r\n                  >\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"yes\" id=\"copyright-yes\" />\r\n                      <Label htmlFor=\"copyright-yes\">Có</Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"no\" id=\"copyright-no\" />\r\n                      <Label htmlFor=\"copyright-no\">Không</Label>\r\n                    </div>\r\n                  </RadioGroup>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label>Bài hát này đã từng được phát hành chưa? *</Label>\r\n                  <RadioGroup\r\n                    value={hasBeenReleased}\r\n                    onValueChange={(value: ReleaseHistoryStatus) => setHasBeenReleased(value)}\r\n                    className=\"flex gap-4 mt-2\"\r\n                  >\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"yes\" id=\"released-yes\" />\r\n                      <Label htmlFor=\"released-yes\">Đã phát hành</Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"no\" id=\"released-no\" />\r\n                      <Label htmlFor=\"released-no\">Chưa phát hành</Label>\r\n                    </div>\r\n                  </RadioGroup>\r\n                </div>\r\n\r\n                {hasBeenReleased === \"yes\" && (\r\n                  <div>\r\n                    <Label>Các nền tảng đã phát hành:</Label>\r\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2 mt-2\">\r\n                      {[\r\n                        { value: \"youtube\" as Platform, label: \"YouTube\" },\r\n                        { value: \"spotify\" as Platform, label: \"Spotify\" },\r\n                        { value: \"apple_music\" as Platform, label: \"Apple Music\" },\r\n                        { value: \"soundcloud\" as Platform, label: \"SoundCloud\" },\r\n                        { value: \"other_platform\" as Platform, label: \"Khác\" }\r\n                      ].map((platform) => (\r\n                        <div key={platform.value} className=\"flex items-center space-x-2\">\r\n                          <Checkbox\r\n                            id={platform.value}\r\n                            checked={platforms.includes(platform.value)}\r\n                            onCheckedChange={(checked) =>\r\n                              handlePlatformChange(platform.value, checked as boolean)\r\n                            }\r\n                          />\r\n                          <Label htmlFor={platform.value}>{platform.label}</Label>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <div>\r\n                  <Label>Bài hát có lời không? *</Label>\r\n                  <RadioGroup\r\n                    value={hasLyrics}\r\n                    onValueChange={(value: LyricsStatus) => setHasLyrics(value)}\r\n                    className=\"flex gap-4 mt-2\"\r\n                  >\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"yes\" id=\"lyrics-yes\" />\r\n                      <Label htmlFor=\"lyrics-yes\">Có lời</Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"no\" id=\"lyrics-no\" />\r\n                      <Label htmlFor=\"lyrics-no\">Instrumental</Label>\r\n                    </div>\r\n                  </RadioGroup>\r\n                </div>\r\n\r\n                {hasLyrics === \"yes\" && (\r\n                  <div>\r\n                    <Label htmlFor=\"lyrics\">Lời bài hát</Label>\r\n                    <Textarea\r\n                      id=\"lyrics\"\r\n                      value={lyrics}\r\n                      onChange={(e) => setLyrics(e.target.value)}\r\n                      placeholder=\"Nhập lời bài hát của bạn...\"\r\n                      rows={8}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"release\" className=\"space-y-6\">\r\n            <Card>\r\n              <CardContent className=\"p-6 space-y-4\">\r\n                <h3 className=\"text-xl font-semibold mb-4\">Thông tin phát hành</h3>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"releaseDate\">Ngày phát hành mong muốn *</Label>\r\n                  <Input\r\n                    id=\"releaseDate\"\r\n                    type=\"date\"\r\n                    value={releaseDate}\r\n                    onChange={(e) => setReleaseDate(e.target.value)}\r\n                    min={getMinimumReleaseDate()}\r\n                  />\r\n                  <p className=\"text-sm text-muted-foreground mt-1\">\r\n                    Ngày phát hành phải ít nhất 2 ngày kể từ hôm nay\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"bg-secondary/50 border border-border p-4 rounded-lg\">\r\n                  <h4 className=\"font-semibold mb-2 text-foreground\">📋 Tóm tắt thông tin</h4>\r\n                  <div className=\"space-y-2 text-sm text-foreground\">\r\n                    <p><strong>Nghệ sĩ:</strong> {artistName || \"Chưa nhập\"}</p>\r\n                    <p><strong>Bài hát:</strong> {songTitle || \"Chưa nhập\"}</p>\r\n                    <p><strong>Album:</strong> {albumName || \"Không có\"}</p>\r\n                    <p><strong>Thể loại:</strong> {mainCategory} - {subCategory}</p>\r\n                    <p><strong>Loại phát hành:</strong> {releaseType}</p>\r\n                    <p><strong>Files âm thanh:</strong> {audioTracks.length} file(s)</p>\r\n                    <p><strong>Có ảnh bìa:</strong> {imageFile ? \"Có\" : \"Chưa có\"}</p>\r\n                    <p><strong>Ngày phát hành:</strong> {releaseDate || \"Chưa chọn\"}</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  disabled={isUploading || !songTitle || !artistName || audioTracks.length === 0}\r\n                  className=\"w-full\"\r\n                  size=\"lg\"\r\n                >\r\n                  {isUploading ? (\r\n                    <>\r\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\" />\r\n                      Đang gửi...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Rocket className=\"mr-2 h-4 w-4\" />\r\n                      Gửi để chờ duyệt\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAhDA;;;;;;;;;;;;;;;;;;AA6De,SAAS,eAAe,EAAE,iBAAiB,EAAE,SAAS,EAAiC;IACpG,MAAM,EAAE,MAAM,WAAW,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEpC,6CAA6C;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB;IAChE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;IAC/D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC5D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC5D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA4B;IACnF,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAwB;IAC7E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;IACzD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,cAAc;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IACxD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC/D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAE/D,qBAAqB;IACrB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACxE,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAuC,CAAC;IAE/D,4DAA4D;IAC5D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe,CAAA,GAAA,4GAAA,CAAA,wBAAqB,AAAD;QACnC,IAAI,aAAa;YACf,YAAY,YAAY,QAAQ,IAAI;YACpC,cAAc,YAAY,IAAI,KAAK,WAAW,YAAY,QAAQ,GAAG;YACrE,aAAa,YAAY,KAAK,IAAI;QACpC;IACF,GAAG;QAAC;KAAY;IAEhB,IAAI,CAAC,aAAa;QAChB,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA2C;;;;;;kCACzD,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;IAIrC;IAEA,yCAAyC;IACzC,MAAM,sBAAsB,CAAC;QAC3B,eAAe,CAAA,OACb,KAAK,GAAG,CAAC,CAAC;gBACR,IAAI,MAAM,EAAE,KAAK,SAAS;oBACxB,OAAO;wBACL,GAAG,KAAK;wBACR,MAAM;4BACJ,GAAG,MAAM,IAAI;4BACb,mBAAmB;mCACd,MAAM,IAAI,CAAC,iBAAiB;gCAC/B;oCACE,MAAM;oCACN,UAAU;oCACV,MAAM;oCACN,YAAY;gCACd;6BACD;wBACH;oBACF;gBACF;gBACA,OAAO;YACT;IAEJ;IAEA,MAAM,yBAAyB,CAAC,SAAiB;QAC/C,eAAe,CAAA,OACb,KAAK,GAAG,CAAC,CAAC;gBACR,IAAI,MAAM,EAAE,KAAK,SAAS;oBACxB,OAAO;wBACL,GAAG,KAAK;wBACR,MAAM;4BACJ,GAAG,MAAM,IAAI;4BACb,mBAAmB,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,GAAG,QAAU,UAAU;wBACjF;oBACF;gBACF;gBACA,OAAO;YACT;IAEJ;IAEA,MAAM,yBAAyB,CAAC,SAAiB,aAAqB,OAA+B;QACnG,eAAe,CAAA,OACb,KAAK,GAAG,CAAC,CAAC;gBACR,IAAI,MAAM,EAAE,KAAK,SAAS;oBACxB,OAAO;wBACL,GAAG,KAAK;wBACR,MAAM;4BACJ,GAAG,MAAM,IAAI;4BACb,mBAAmB,MAAM,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,QAAQ;gCAC3D,IAAI,UAAU,aAAa;oCACzB,OAAO;wCAAE,GAAG,MAAM;wCAAE,CAAC,MAAM,EAAE;oCAAM;gCACrC;gCACA,OAAO;4BACT;wBACF;oBACF;gBACF;gBACA,OAAO;YACT;IAEJ;IAEA,2BAA2B;IAC3B,MAAM,sBAAsB,CAAC,SAAiB;QAC5C,IAAI,qBAAqB,SAAS;YAChC,sBAAsB;YACtB,UAAU,OAAO,CAAC,QAAQ,EAAE;YAC5B,oBAAoB;QACtB,OAAO;YACL,mCAAmC;YACnC,IAAI,kBAAkB;gBACpB,UAAU,OAAO,CAAC,iBAAiB,EAAE;YACvC;YAEA,iBAAiB;YACjB,IAAI,CAAC,UAAU,OAAO,CAAC,QAAQ,EAAE;gBAC/B,UAAU,OAAO,CAAC,QAAQ,GAAG,IAAI,MAAM;gBACvC,UAAU,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS;oBACnD,oBAAoB;gBACtB;YACF;YAEA,UAAU,OAAO,CAAC,QAAQ,CAAC,IAAI;YAC/B,oBAAoB;QACtB;IACF;IAEA,8BAA8B;IAC9B,MAAM,uBAAuB,CAAC,UAAoB;QAChD,IAAI,SAAS;YACX,aAAa,CAAA,OAAQ;uBAAI;oBAAM;iBAAS;QAC1C,OAAO;YACL,aAAa,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,IAAK,MAAM;QAC5C;IACJ,EAAK,uBAAuB;;IAC5B,MAAM,oBAAoB,OAAO;QAC/B,MAAM,OAAO,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QACpC,IAAI,CAAC,MAAM;QAEX,IAAI;YACF,MAAM,aAAa,MAAM,CAAA,GAAA,4GAAA,CAAA,oBAAiB,AAAD,EAAE;YAC3C,IAAI,CAAC,WAAW,KAAK,EAAE;gBACrB,UAAU,OAAO,WAAW,MAAM,EAAE;gBACpC;YACA;YAEF,aAAa;YACb,mBAAmB,IAAI,eAAe,CAAC;QACzC,EAAE,OAAO,OAAO;YACd,UAAU,OAAO;gBAAC;aAA4B,EAAE;QAClD;IACF;IAEA,MAAM,oBAAoB,CAAC;QACzB,MAAM,QAAQ,MAAM,MAAM,CAAC,KAAK;QAChC,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG;QAElC,MAAM,IAAI,CAAC,OAAO,OAAO,CAAC,OAAO;YAC/B,IAAI;gBACF,MAAM,aAAa,CAAA,GAAA,4GAAA,CAAA,oBAAiB,AAAD,EAAE;gBACrC,IAAI,CAAC,WAAW,KAAK,EAAE;oBACrB,UAAU,OAAO;wBAAC,GAAG,KAAK,IAAI,CAAC,EAAE,EAAE,WAAW,MAAM,CAAC,IAAI,CAAC,OAAO;qBAAC,EAAE;oBACpE;gBACF;gBAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,aAAa,aAAa;gBACzD,mBAAmB;gBAEnB,MAAM,WAAuB;oBAC3B;oBACA,IAAI;oBACJ,MAAM;wBACJ,UAAU,KAAK,IAAI;wBACnB,OAAO,KAAK,IAAI,CAAC,OAAO,CAAC,aAAa;wBACtC,MAAM;wBACN,WAAW,KAAK,IAAI,CAAC,OAAO,CAAC,aAAa;wBAC1C,YAAY;wBACZ,gBAAgB;wBAChB,mBAAmB,EAAE;oBACvB;gBACF;gBAEA,eAAe,CAAA,OAAQ;2BAAI;wBAAM;qBAAS;YAC5C,EAAE,OAAO,OAAO;gBACd,UAAU,OAAO;oBAAC,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;iBAAC,EAAE;YAChE;QACF;IACA;IAEF,MAAM,mBAAmB,CAAC;QACxB,eAAe,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;QACzD,IAAI,qBAAqB,SAAS;YAChC,UAAU,OAAO,CAAC,QAAQ,EAAE;YAC5B,oBAAoB;QACtB;QACA,IAAI,UAAU,OAAO,CAAC,QAAQ,EAAE;YAC9B,IAAI,eAAe,CAAC,UAAU,OAAO,CAAC,QAAQ,CAAC,GAAG;YAClD,OAAO,UAAU,OAAO,CAAC,QAAQ;QACnC;IACF;IAEA,uDAAuD;IACvD,MAAM,eAAe,CAAC,MAAY;QAClC,8BAA8B;QAC9B,gCAAgC;QAChC,sCAAsC;QACtC,mBAAmB;QACnB,oCAAoC;QAElC,MAAM,aAAa,cAAc;QACjC,MAAM,OAAO,IAAI,OAAO,WAAW,GAAG,QAAQ,GAAG,KAAK,CAAC,GAAG,4BAA4B;;QACtF,MAAM,OAAO,CAAC,KAAK,EAAE,OAAO,OAAO,YAAY,QAAQ,CAAC,GAAG,MAAM;QAEjE,OAAO;YACL;YACA;QACF;IACF;IAEA,0BAA0B;IAC1B,MAAM,eAAe;QACnB,aAAa;QACb,MAAM,mBAAmB,EAAE;QAE3B,wBAAwB;QACxB,IAAI,CAAC,UAAU,IAAI,IAAI,iBAAiB,IAAI,CAAC;QAC7C,IAAI,CAAC,WAAW,IAAI,IAAI,iBAAiB,IAAI,CAAC;QAC9C,IAAI,CAAC,SAAS,IAAI,IAAI,iBAAiB,IAAI,CAAC;QAC5C,IAAI,CAAC,UAAU,IAAI,IAAI,iBAAiB,IAAI,CAAC;QAC7C,IAAI,CAAC,UAAU,QAAQ,CAAC,MAAM,iBAAiB,IAAI,CAAC;QACpD,IAAI,YAAY,MAAM,KAAK,GAAG,iBAAiB,IAAI,CAAC;QACpD,IAAI,CAAC,WAAW,iBAAiB,IAAI,CAAC;QACtC,IAAI,CAAC,aAAa,iBAAiB,IAAI,CAAC;QAExC,kDAAkD;QAClD,MAAM,gBAAgB,YAAY,MAAM,CAAC,CAAA,QAAS,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI;QAC5E,IAAI,cAAc,MAAM,GAAG,GAAG;YAC5B,iBAAiB,IAAI,CAAC,GAAG,cAAc,MAAM,CAAC,0BAA0B,CAAC;QAC3E;QAEA,uDAAuD;QACvD,YAAY,OAAO,CAAC,CAAA;YAClB,MAAM,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,QAAQ;gBAC5C,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI;oBACvB,iBAAiB,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,IAAI,CAAC,SAAS,CAAC,qBAAqB,EAAE,QAAQ,EAAE,YAAY,CAAC;gBACrG;YACF;QACF;QAEA,IAAI,iBAAiB,MAAM,GAAG,GAAG;YAC/B,UAAU,OAAO,kBAAkB;YACnC;QACF;QAEA,eAAe;QAEf,IAAI;YACF,sCAAsC;YACtC,CAAA,GAAA,gIAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ,0BAA0B;gBACjD,YAAY,YAAY,MAAM;gBAC9B,UAAU,CAAC,CAAC;gBACZ;gBACA;gBACA;YACF;YAEA,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,aAAa,aAAa;YACvD,mBAAmB;YAEnB,iBAAiB;YACjB,MAAM,gBAAgB,IAAI;YAC1B,IAAI,WAAW;gBACb,cAAc,MAAM,CAAC,QAAQ;YAC/B;YACA,cAAc,MAAM,CAAC,QAAQ;YAC7B,cAAc,MAAM,CAAC,UAAU,YAAY,EAAE;YAC7C,cAAc,MAAM,CAAC,cAAc;YACnC,cAAc,MAAM,CAAC,aAAa;YAClC,cAAc,MAAM,CAAC,QAAQ;YAE7B,MAAM,gBAAgB,MAAM,MAAM,eAAe;gBAC/C,QAAQ;gBACR,MAAM;YACR;YAEA,MAAM,cAAc,MAAM,cAAc,IAAI;YAC5C,IAAI,CAAC,YAAY,OAAO,EAAE;gBACxB,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE,YAAY,OAAO,EAAE;YAC1D;YAEA,6CAA6C;YAC7C,MAAM,aAAqF,EAAE;YAE7F,KAAK,MAAM,SAAS,YAAa;gBAC/B,MAAM,gBAAgB,IAAI;gBAC1B,cAAc,MAAM,CAAC,QAAQ,MAAM,IAAI;gBACvC,cAAc,MAAM,CAAC,QAAQ;gBAC7B,cAAc,MAAM,CAAC,UAAU,YAAY,EAAE;gBAC7C,cAAc,MAAM,CAAC,cAAc;gBACnC,cAAc,MAAM,CAAC,aAAa,MAAM,IAAI,CAAC,SAAS;gBACtD,cAAc,MAAM,CAAC,QAAQ,MAAM,EAAE;gBAErC,MAAM,gBAAgB,MAAM,MAAM,eAAe;oBAC/C,QAAQ;oBACR,MAAM;gBACR;gBAEA,MAAM,cAAc,MAAM,cAAc,IAAI;gBAC5C,IAAI,CAAC,YAAY,OAAO,EAAE;oBACxB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,YAAY,OAAO,EAAE;gBAClF;gBAEA,yCAAyC;gBACzC,WAAW,IAAI,CAAC;oBACd,OAAO,MAAM,IAAI,CAAC,SAAS;oBAC3B,QAAQ,MAAM,IAAI,CAAC,UAAU;oBAC7B,UAAU,YAAY,GAAG;oBACzB,UAAU,MAAM,IAAI,CAAC,QAAQ,IAAI;oBACjC,MAAM,MAAM,EAAE;oBACd,UAAU,MAAM,IAAI,CAAC,IAAI;oBACzB,gBAAgB,MAAM,IAAI,CAAC,cAAc;oBACzC,UAAU,MAAM,IAAI,CAAC,IAAI;oBACzB,QAAQ,MAAM,IAAI,CAAC,IAAI;oBACvB,SAAS;oBACT,YAAY,KAAK,wCAAwC;gBAC3D;YACF;YAEA,sCAAsC;YACtC,MAAM,oBACJ,gBAAgB,WAAW,kBAAkB,MAAM,GACnD,gBAAgB,OAAO,kBAAkB,EAAE,GAC3C,gBAAgB,UAAU,kBAAkB,KAAK,GACjD,gBAAgB,OAAO,kBAAkB,KAAK,GAC9C,kBAAkB,MAAM;YAE1B,8CAA8C;YAC9C,MAAM,iBAA2E;gBAC/E,OAAO;gBACP,QAAQ;gBACR,KAAK;gBACL,MAAM;gBACN,gBAAgB,YAAY,GAAG;gBAC/B,aAAa,IAAI,KAAK;gBACtB,QAAQ,uBAAuB,OAAO;gBACtC,gBAAgB;gBAChB,WAAW;gBACX,WAAW,aAAa;gBACxB,cAAc;gBACd,aAAa,eAAe;gBAC5B,WAAW,oBAAoB,QAAQ;oBAAE;gBAAU,IAAI;gBACvD,kBAAkB;gBAClB,uBAAuB;gBACvB,kBAAkB;gBAClB,iBAAiB;gBACjB,OAAO,cAAc,QAAQ,SAAS;gBACtC,QAAQ,YAAY,EAAE;gBACtB,SAAS,YAAY,OAAO,IAAI,GAAG,8BAA8B;YACnE;YAEA,iDAAiD;YACjD,MAAM,SAAS,MAAM,iIAAA,CAAA,UAAO,CAAC,0BAA0B,CAAC,gBAAgB;YAExE,IAAI,CAAC,OAAO,OAAO,EAAE;gBACnB,MAAM,IAAI,MAAM,OAAO,OAAO,IAAI;YACpC;YAEA,2DAA2D;YAC3D,MAAM,mBAA+B;gBACnC,IAAI,OAAO,IAAI,CAAE,UAAU,CAAC,EAAE;gBAC9B,QAAQ,YAAY,EAAE;gBACtB,MAAM,UAAU,CAAC,EAAE,EAAE,QAAQ;gBAC7B,kBAAkB,YAAY,QAAQ;gBACtC;gBACA;gBACA;gBACA;gBACA,WAAW,WAAW,QAAQ;gBAC9B,UAAU,YAAY,GAAG;gBACzB,UAAU,WAAW,MAAM,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,QAAQ,GAAG;gBAC7D,WAAW,WAAW,GAAG,CAAC,CAAA,QAAS,MAAM,QAAQ;gBACjD,iBAAiB,WAAW,MAAM;gBAClC,QAAQ;gBACR,gBAAgB,IAAI,OAAO,WAAW;gBACtC;gBACA;gBACA;gBACA;gBACA;gBACA,WAAW,oBAAoB,QAAQ,YAAY,EAAE;gBACrD;gBACA,QAAQ,cAAc,QAAQ,SAAS;gBACvC;gBACA;gBACA;gBACA,mBAAmB,EAAE;gBACrB,YAAY,YAAY,GAAG,CAAC,CAAA,QAAS,MAAM,IAAI;YACjD;YAEA,kBAAkB;YAElB,gCAAgC;YAChC,CAAA,GAAA,gIAAA,CAAA,wBAAqB,AAAD,EAAE,OAAO,IAAI,CAAE,UAAU,CAAC,EAAE,EAAE,UAAU,WAAW;gBACrE;gBACA;gBACA,YAAY,WAAW,MAAM;gBAC7B;gBACA;gBACA;gBACA;YACF;YAEA,aAAa;YACb;YAEA,UAAU,cAAc;gBAAC;aAA+B,EAAE;QAC5D,EAAE,OAAO,OAAgB;YACvB,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAE9D,2BAA2B;YAC3B,CAAA,GAAA,gIAAA,CAAA,wBAAqB,AAAD,EAAE,WAAW,UAAU,SAAS;gBAClD;gBACA;gBACA,OAAO;gBACP,YAAY,YAAY,MAAM;YAChC;YAEA,UAAU,OAAO;gBAAC;aAAa,EAAE;QACnC,SAAU;YACR,eAAe;QACjB;IACF;IAEA,MAAM,YAAY;QAChB,cAAc,YAAY,IAAI,KAAK,WAAW,YAAY,QAAQ,GAAG;QACrE,aAAa;QACb,aAAa;QACb,aAAa,YAAY,KAAK,IAAI;QAClC,gBAAgB;QAChB,eAAe;QACf,eAAe;QACf,oBAAoB;QACpB,mBAAmB;QACnB,aAAa,EAAE;QACf,aAAa;QACb,UAAU;QACV,aAAa;QACb,mBAAmB;QACnB,eAAe,EAAE;QACjB,eAAe,CAAA,GAAA,4GAAA,CAAA,wBAAqB,AAAD;IACrC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAA0B;;;;;;8CACxC,8OAAC;oCAAE,WAAU;8CAAwB;;;;;;;;;;;;sCAEvC,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,8HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIhB,8OAAC,yHAAA,CAAA,OAAI;oBACH,cAAa;oBACb,WAAU;oBACoB,eAAe,CAAC;wBAC5C,CAAA,GAAA,gIAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,OAAc;4BACpC,UAAU;wBACZ;oBACF;;sCAEA,8OAAC,yHAAA,CAAA,WAAQ;4BAAC,WAAU;;8CAClB,8OAAC,yHAAA,CAAA,cAAW;oCAAC,OAAM;oCAAQ,WAAU;;sDACnC,8OAAC,sMAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;wCAAY;;;;;;;8CAGlC,8OAAC,yHAAA,CAAA,cAAW;oCAAC,OAAM;oCAAQ,WAAU;;sDACnC,8OAAC,0MAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;wCAAY;;;;;;;8CAGpC,8OAAC,yHAAA,CAAA,cAAW;oCAAC,OAAM;oCAAW,WAAU;;sDACtC,8OAAC,wMAAA,CAAA,QAAK;4CAAC,WAAU;;;;;;wCAAY;;;;;;;8CAG/B,8OAAC,yHAAA,CAAA,cAAW;oCAAC,OAAM;oCAAU,WAAU;;sDACrC,8OAAC,sMAAA,CAAA,SAAM;4CAAC,WAAU;;;;;;wCAAY;;;;;;;;;;;;;sCAKlC,8OAAC,yHAAA,CAAA,cAAW;4BAAC,OAAM;4BAAQ,WAAU;sCACnC,cAAA,8OAAC,yHAAA,CAAA,OAAI;0CACH,cAAA,8OAAC,yHAAA,CAAA,cAAW;oCAAC,WAAU;;sDACrB,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAE3C,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;;sEACC,8OAAC,0HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAW;;;;;;sEAC1B,8OAAC,0HAAA,CAAA,QAAK;4DACJ,IAAG;4DACH,OAAO;4DACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4DAC3C,aAAY;;;;;;;;;;;;8DAIhB,8OAAC;;sEACC,8OAAC,0HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAa;;;;;;sEAC5B,8OAAC,0HAAA,CAAA,QAAK;4DACJ,IAAG;4DACH,OAAO;4DACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4DAC7C,aAAY;;;;;;;;;;;;;;;;;;sDAKlB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;;sEACC,8OAAC,0HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAY;;;;;;sEAC3B,8OAAC,0HAAA,CAAA,QAAK;4DACJ,IAAG;4DACH,MAAK;4DACL,OAAO;4DACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;4DAC5C,aAAY;;;;;;;;;;;;8DAIhB,8OAAC;;sEACC,8OAAC,0HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAa;;;;;;sEAC5B,8OAAC,2HAAA,CAAA,SAAM;4DAAC,OAAO;4DAAY,eAAe,CAAC,QAA6B,cAAc;;8EACpF,8OAAC,2HAAA,CAAA,gBAAa;8EACZ,cAAA,8OAAC,2HAAA,CAAA,cAAW;;;;;;;;;;8EAEd,8OAAC,2HAAA,CAAA,gBAAa;;sFACZ,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAS;;;;;;sFAC3B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAoB;;;;;;sFACtC,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAS;;;;;;sFAC3B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAW;;;;;;sFAC7B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAW;;;;;;sFAC7B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAa;;;;;;sFAC/B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sDAMzC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;;sEACC,8OAAC,0HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAY;;;;;;sEAC3B,8OAAC,0HAAA,CAAA,QAAK;4DACJ,IAAG;4DACH,OAAO;4DACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;4DAC5C,aAAY;;;;;;;;;;;;8DAIhB,8OAAC;;sEACC,8OAAC,0HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAY;;;;;;sEAC3B,8OAAC,0HAAA,CAAA,QAAK;4DACJ,IAAG;4DACH,OAAO;4DACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;4DAC5C,aAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAQxB,8OAAC,yHAAA,CAAA,cAAW;4BAAC,OAAM;4BAAQ,WAAU;sCACnC,cAAA,8OAAC,yHAAA,CAAA,OAAI;0CACH,cAAA,8OAAC,yHAAA,CAAA,cAAW;oCAAC,WAAU;;sDACrB,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAG3C,8OAAC;;8DACC,8OAAC,0HAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAc;;;;;;8DAC7B,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DACC,IAAG;4DACH,MAAK;4DACL,QAAO;4DACP,UAAU;4DACV,WAAU;;;;;;sEAEZ,8OAAC,2HAAA,CAAA,SAAM;4DACL,MAAK;4DACL,SAAQ;4DACR,SAAS,IAAM,SAAS,cAAc,CAAC,gBAAgB;4DACvD,WAAU;;8EAEV,8OAAC,0MAAA,CAAA,aAAU;oEAAC,WAAU;;;;;;gEAAiB;;;;;;;wDAGxC,iCACC,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEACC,KAAK;oEACL,KAAI;oEACJ,WAAU;;;;;;8EAEZ,8OAAC,2HAAA,CAAA,SAAM;oEACL,MAAK;oEACL,SAAQ;oEACR,MAAK;oEACL,SAAS;wEACP,aAAa;wEACb,mBAAmB;oEACrB;oEACA,WAAU;;sFAEV,8OAAC,4LAAA,CAAA,IAAC;4EAAC,WAAU;;;;;;wEAAiB;;;;;;;;;;;;;;;;;;;;;;;;;sDAQxC,8OAAC;;8DACC,8OAAC,0HAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAc;;;;;;8DAC7B,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DACC,IAAG;4DACH,MAAK;4DACL,QAAO;4DACP,QAAQ;4DACR,UAAU;4DACV,WAAU;;;;;;sEAEZ,8OAAC,2HAAA,CAAA,SAAM;4DACL,MAAK;4DACL,SAAQ;4DACR,SAAS,IAAM,SAAS,cAAc,CAAC,gBAAgB;4DACvD,WAAU;;8EAEV,8OAAC,0MAAA,CAAA,aAAU;oEAAC,WAAU;;;;;;gEAAiB;;;;;;;wDAIxC,YAAY,MAAM,GAAG,mBACpB,8OAAC;4DAAI,WAAU;sEACZ,YAAY,GAAG,CAAC,CAAC,OAAO,sBAAW,8OAAC;oEAAmB,WAAU;;sFAChE,8OAAC;4EAAI,WAAU;;8FACb,8OAAC;oFAAK,WAAU;8FAAe,MAAM,IAAI,CAAC,IAAI;;;;;;8FAC9C,8OAAC;oFAAI,WAAU;;sGACb,8OAAC,2HAAA,CAAA,SAAM;4FACL,MAAK;4FACL,SAAQ;4FACR,MAAK;4FACL,SAAS,IAAM,oBAAoB,MAAM,EAAE,EAAE,IAAI,eAAe,CAAC,MAAM,IAAI;sGAE1E,qBAAqB,MAAM,EAAE,iBAC5B,8OAAC,oMAAA,CAAA,QAAK;gGAAC,WAAU;;;;;qHAEjB,8OAAC,kMAAA,CAAA,OAAI;gGAAC,WAAU;;;;;;;;;;;sGAGpB,8OAAC,2HAAA,CAAA,SAAM;4FACL,MAAK;4FACL,SAAQ;4FACR,MAAK;4FACL,SAAS,IAAM,iBAAiB,MAAM,EAAE;sGAExC,cAAA,8OAAC,0MAAA,CAAA,SAAM;gGAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;sFAMxB,8OAAC;4EAAI,WAAU;;8FACb,8OAAC,0HAAA,CAAA,QAAK;oFAAC,SAAS,CAAC,YAAY,EAAE,MAAM,EAAE,EAAE;8FAAE;;;;;;8FAC3C,8OAAC,0HAAA,CAAA,QAAK;oFACJ,IAAI,CAAC,YAAY,EAAE,MAAM,EAAE,EAAE;oFAC7B,OAAO,MAAM,IAAI,CAAC,SAAS;oFAC3B,UAAU,CAAC;wFACT,eAAe,CAAA,OACb,KAAK,GAAG,CAAC,CAAA;gGACP,IAAI,EAAE,EAAE,KAAK,MAAM,EAAE,EAAE;oGACrB,OAAO;wGACL,GAAG,CAAC;wGACJ,MAAM;4GACJ,GAAG,EAAE,IAAI;4GACT,WAAW,EAAE,MAAM,CAAC,KAAK;wGAC3B;oGACF;gGACF;gGACA,OAAO;4FACT;oFAEJ;oFACA,aAAY;oFACZ,WAAU;;;;;;;;;;;;sFAKd,8OAAC;4EAAI,WAAU;;8FACb,8OAAC;oFAAI,WAAU;;sGACb,8OAAC,0HAAA,CAAA,QAAK;sGAAC;;;;;;sGACP,8OAAC,2HAAA,CAAA,SAAM;4FACL,MAAK;4FACL,SAAQ;4FACR,MAAK;4FACL,SAAS,IAAM,oBAAoB,MAAM,EAAE;;8GAE3C,8OAAC,kMAAA,CAAA,OAAI;oGAAC,WAAU;;;;;;gGAAiB;;;;;;;;;;;;;gFAKpC,MAAM,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,QAAQ,4BACzC,8OAAC;wFAAsB,WAAU;;0GAC/B,8OAAC,0HAAA,CAAA,QAAK;gGACJ,aAAY;gGACZ,OAAO,OAAO,IAAI;gGAClB,UAAU,CAAC,IAAM,uBAAuB,MAAM,EAAE,EAAE,aAAa,QAAQ,EAAE,MAAM,CAAC,KAAK;;;;;;0GAEvF,8OAAC,0HAAA,CAAA,QAAK;gGACJ,aAAY;gGACZ,OAAO,OAAO,QAAQ,IAAI;gGAC1B,UAAU,CAAC,IAAM,uBAAuB,MAAM,EAAE,EAAE,aAAa,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;0GAE3F,8OAAC,2HAAA,CAAA,SAAM;gGACL,OAAO,OAAO,IAAI;gGAClB,eAAe,CAAC,QAAgC,uBAAuB,MAAM,EAAE,EAAE,aAAa,QAAQ;;kHAEtG,8OAAC,2HAAA,CAAA,gBAAa;kHACZ,cAAA,8OAAC,2HAAA,CAAA,cAAW;;;;;;;;;;kHAEd,8OAAC,2HAAA,CAAA,gBAAa;;0HACZ,8OAAC,2HAAA,CAAA,aAAU;gHAAC,OAAM;0HAAY;;;;;;0HAC9B,8OAAC,2HAAA,CAAA,aAAU;gHAAC,OAAM;0HAAW;;;;;;0HAC7B,8OAAC,2HAAA,CAAA,aAAU;gHAAC,OAAM;0HAAS;;;;;;0HAC3B,8OAAC,2HAAA,CAAA,aAAU;gHAAC,OAAM;0HAAW;;;;;;0HAC7B,8OAAC,2HAAA,CAAA,aAAU;gHAAC,OAAM;0HAAW;;;;;;0HAC7B,8OAAC,2HAAA,CAAA,aAAU;gHAAC,OAAM;0HAAa;;;;;;0HAC/B,8OAAC,2HAAA,CAAA,aAAU;gHAAC,OAAM;0HAAe;;;;;;;;;;;;;;;;;;0GAGrC,8OAAC;gGAAI,WAAU;;kHACb,8OAAC,0HAAA,CAAA,QAAK;wGACJ,MAAK;wGACL,aAAY;wGACZ,KAAI;wGACJ,KAAI;wGACJ,OAAO,OAAO,UAAU;wGACxB,UAAU,CAAC,IAAM,uBAAuB,MAAM,EAAE,EAAE,aAAa,cAAc,SAAS,EAAE,MAAM,CAAC,KAAK,KAAK;;;;;;kHAE3G,8OAAC,2HAAA,CAAA,SAAM;wGACL,MAAK;wGACL,SAAQ;wGACR,MAAK;wGACL,SAAS,IAAM,uBAAuB,MAAM,EAAE,EAAE;kHAEhD,cAAA,8OAAC,4LAAA,CAAA,IAAC;4GAAC,WAAU;;;;;;;;;;;;;;;;;;uFA3CT;;;;;;;;;;;;mEAtE8B,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAiIpE,8OAAC,yHAAA,CAAA,cAAW;4BAAC,OAAM;4BAAW,WAAU;sCACtC,cAAA,8OAAC,yHAAA,CAAA,OAAI;0CACH,cAAA,8OAAC,yHAAA,CAAA,cAAW;oCAAC,WAAU;;sDACrB,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAE3C,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;;sEACC,8OAAC,0HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAe;;;;;;sEAC9B,8OAAC,2HAAA,CAAA,SAAM;4DAAC,OAAO;4DAAc,eAAe,CAAC,QAAwB,gBAAgB;;8EACnF,8OAAC,2HAAA,CAAA,gBAAa;8EACZ,cAAA,8OAAC,2HAAA,CAAA,cAAW;;;;;;;;;;8EAEd,8OAAC,2HAAA,CAAA,gBAAa;;sFACZ,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAM;;;;;;sFACxB,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAoB;;;;;;sFACtC,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAY;;;;;;sFAC9B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAM;;;;;;sFACxB,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAM;;;;;;sFACxB,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAS;;;;;;sFAC3B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAW;;;;;;sFAC7B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAQ;;;;;;sFAC1B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAa;;;;;;;;;;;;;;;;;;;;;;;;8DAKrC,8OAAC;;sEACC,8OAAC,0HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAc;;;;;;sEAC7B,8OAAC,2HAAA,CAAA,SAAM;4DAAC,OAAO;4DAAa,eAAe,CAAC,QAAuB,eAAe;;8EAChF,8OAAC,2HAAA,CAAA,gBAAa;8EACZ,cAAA,8OAAC,2HAAA,CAAA,cAAW;;;;;;;;;;8EAEd,8OAAC,2HAAA,CAAA,gBAAa;;sFACZ,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAW;;;;;;sFAC7B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAQ;;;;;;sFAC1B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAO;;;;;;sFACzB,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAO;;;;;;sFACzB,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAQ;;;;;;sFAC1B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAO;;;;;;sFACzB,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAQ;;;;;;sFAC1B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAc;;;;;;sFAChC,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAO;;;;;;sFACzB,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAY;;;;;;;;;;;;;;;;;;;;;;;;8DAKpC,8OAAC;;sEACC,8OAAC,0HAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAc;;;;;;sEAC7B,8OAAC,2HAAA,CAAA,SAAM;4DAAC,OAAO;4DAAa,eAAe,CAAC,QAAuB,eAAe;;8EAChF,8OAAC,2HAAA,CAAA,gBAAa;8EACZ,cAAA,8OAAC,2HAAA,CAAA,cAAW;;;;;;;;;;8EAEd,8OAAC,2HAAA,CAAA,gBAAa;;sFACZ,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAS;;;;;;sFAC3B,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAK;;;;;;sFACvB,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAK;;;;;;sFACvB,8OAAC,2HAAA,CAAA,aAAU;4EAAC,OAAM;sFAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sDAMlC,8OAAC;;8DACC,8OAAC,0HAAA,CAAA,QAAK;8DAAC;;;;;;8DACP,8OAAC,mIAAA,CAAA,aAAU;oDACT,OAAO;oDACP,eAAe,CAAC,QAAoC,oBAAoB;oDACxE,WAAU;;sEAEV,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,mIAAA,CAAA,iBAAc;oEAAC,OAAM;oEAAM,IAAG;;;;;;8EAC/B,8OAAC,0HAAA,CAAA,QAAK;oEAAC,SAAQ;8EAAgB;;;;;;;;;;;;sEAEjC,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,mIAAA,CAAA,iBAAc;oEAAC,OAAM;oEAAK,IAAG;;;;;;8EAC9B,8OAAC,0HAAA,CAAA,QAAK;oEAAC,SAAQ;8EAAe;;;;;;;;;;;;;;;;;;;;;;;;sDAKpC,8OAAC;;8DACC,8OAAC,0HAAA,CAAA,QAAK;8DAAC;;;;;;8DACP,8OAAC,mIAAA,CAAA,aAAU;oDACT,OAAO;oDACP,eAAe,CAAC,QAAgC,mBAAmB;oDACnE,WAAU;;sEAEV,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,mIAAA,CAAA,iBAAc;oEAAC,OAAM;oEAAM,IAAG;;;;;;8EAC/B,8OAAC,0HAAA,CAAA,QAAK;oEAAC,SAAQ;8EAAe;;;;;;;;;;;;sEAEhC,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,mIAAA,CAAA,iBAAc;oEAAC,OAAM;oEAAK,IAAG;;;;;;8EAC9B,8OAAC,0HAAA,CAAA,QAAK;oEAAC,SAAQ;8EAAc;;;;;;;;;;;;;;;;;;;;;;;;wCAKlC,oBAAoB,uBACnB,8OAAC;;8DACC,8OAAC,0HAAA,CAAA,QAAK;8DAAC;;;;;;8DACP,8OAAC;oDAAI,WAAU;8DACZ;wDACC;4DAAE,OAAO;4DAAuB,OAAO;wDAAU;wDACjD;4DAAE,OAAO;4DAAuB,OAAO;wDAAU;wDACjD;4DAAE,OAAO;4DAA2B,OAAO;wDAAc;wDACzD;4DAAE,OAAO;4DAA0B,OAAO;wDAAa;wDACvD;4DAAE,OAAO;4DAA8B,OAAO;wDAAO;qDACtD,CAAC,GAAG,CAAC,CAAC,yBACL,8OAAC;4DAAyB,WAAU;;8EAClC,8OAAC,6HAAA,CAAA,WAAQ;oEACP,IAAI,SAAS,KAAK;oEAClB,SAAS,UAAU,QAAQ,CAAC,SAAS,KAAK;oEAC1C,iBAAiB,CAAC,UAChB,qBAAqB,SAAS,KAAK,EAAE;;;;;;8EAGzC,8OAAC,0HAAA,CAAA,QAAK;oEAAC,SAAS,SAAS,KAAK;8EAAG,SAAS,KAAK;;;;;;;2DARvC,SAAS,KAAK;;;;;;;;;;;;;;;;sDAehC,8OAAC;;8DACC,8OAAC,0HAAA,CAAA,QAAK;8DAAC;;;;;;8DACP,8OAAC,mIAAA,CAAA,aAAU;oDACT,OAAO;oDACP,eAAe,CAAC,QAAwB,aAAa;oDACrD,WAAU;;sEAEV,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,mIAAA,CAAA,iBAAc;oEAAC,OAAM;oEAAM,IAAG;;;;;;8EAC/B,8OAAC,0HAAA,CAAA,QAAK;oEAAC,SAAQ;8EAAa;;;;;;;;;;;;sEAE9B,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,mIAAA,CAAA,iBAAc;oEAAC,OAAM;oEAAK,IAAG;;;;;;8EAC9B,8OAAC,0HAAA,CAAA,QAAK;oEAAC,SAAQ;8EAAY;;;;;;;;;;;;;;;;;;;;;;;;wCAKhC,cAAc,uBACb,8OAAC;;8DACC,8OAAC,0HAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAS;;;;;;8DACxB,8OAAC,6HAAA,CAAA,WAAQ;oDACP,IAAG;oDACH,OAAO;oDACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;oDACzC,aAAY;oDACZ,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAQlB,8OAAC,yHAAA,CAAA,cAAW;4BAAC,OAAM;4BAAU,WAAU;sCACrC,cAAA,8OAAC,yHAAA,CAAA,OAAI;0CACH,cAAA,8OAAC,yHAAA,CAAA,cAAW;oCAAC,WAAU;;sDACrB,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAE3C,8OAAC;;8DACC,8OAAC,0HAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAc;;;;;;8DAC7B,8OAAC,0HAAA,CAAA,QAAK;oDACJ,IAAG;oDACH,MAAK;oDACL,OAAO;oDACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;oDAC9C,KAAK,CAAA,GAAA,4GAAA,CAAA,wBAAqB,AAAD;;;;;;8DAE3B,8OAAC;oDAAE,WAAU;8DAAqC;;;;;;;;;;;;sDAKpD,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAG,WAAU;8DAAqC;;;;;;8DACnD,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;;8EAAE,8OAAC;8EAAO;;;;;;gEAAiB;gEAAE,cAAc;;;;;;;sEAC5C,8OAAC;;8EAAE,8OAAC;8EAAO;;;;;;gEAAiB;gEAAE,aAAa;;;;;;;sEAC3C,8OAAC;;8EAAE,8OAAC;8EAAO;;;;;;gEAAe;gEAAE,aAAa;;;;;;;sEACzC,8OAAC;;8EAAE,8OAAC;8EAAO;;;;;;gEAAkB;gEAAE;gEAAa;gEAAI;;;;;;;sEAChD,8OAAC;;8EAAE,8OAAC;8EAAO;;;;;;gEAAwB;gEAAE;;;;;;;sEACrC,8OAAC;;8EAAE,8OAAC;8EAAO;;;;;;gEAAwB;gEAAE,YAAY,MAAM;gEAAC;;;;;;;sEACxD,8OAAC;;8EAAE,8OAAC;8EAAO;;;;;;gEAAoB;gEAAE,YAAY,OAAO;;;;;;;sEACpD,8OAAC;;8EAAE,8OAAC;8EAAO;;;;;;gEAAwB;gEAAE,eAAe;;;;;;;;;;;;;;;;;;;sDAIxD,8OAAC,2HAAA,CAAA,SAAM;4CACL,SAAS;4CACT,UAAU,eAAe,CAAC,aAAa,CAAC,cAAc,YAAY,MAAM,KAAK;4CAC7E,WAAU;4CACV,MAAK;sDAEJ,4BACC;;kEACE,8OAAC;wDAAI,WAAU;;;;;;oDAAmE;;6EAIpF;;kEACE,8OAAC,sMAAA,CAAA,SAAM;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYzD","debugId":null}}]
}